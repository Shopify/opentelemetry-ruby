// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/metrics/v1/metrics.proto

#include "opencensus/proto/metrics/v1/metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fresource_2fv1_2fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Resource_opencensus_2fproto_2fresource_2fv1_2fresource_2eproto;
namespace opencensus {
namespace proto {
namespace metrics {
namespace v1 {
class MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric> _instance;
} _Metric_default_instance_;
class MetricDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricDescriptor> _instance;
} _MetricDescriptor_default_instance_;
class LabelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabelKey> _instance;
} _LabelKey_default_instance_;
class TimeSeriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeSeries> _instance;
} _TimeSeries_default_instance_;
class LabelValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabelValue> _instance;
} _LabelValue_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point> _instance;
  ::google::protobuf::int64 int64_value_;
  double double_value_;
  const ::opencensus::proto::metrics::v1::DistributionValue* distribution_value_;
  const ::opencensus::proto::metrics::v1::SummaryValue* summary_value_;
} _Point_default_instance_;
class DistributionValue_BucketOptions_ExplicitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue_BucketOptions_Explicit> _instance;
} _DistributionValue_BucketOptions_Explicit_default_instance_;
class DistributionValue_BucketOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue_BucketOptions> _instance;
  const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* explicit__;
} _DistributionValue_BucketOptions_default_instance_;
class DistributionValue_BucketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue_Bucket> _instance;
} _DistributionValue_Bucket_default_instance_;
class DistributionValue_Exemplar_AttachmentsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> _instance;
} _DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_default_instance_;
class DistributionValue_ExemplarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue_Exemplar> _instance;
} _DistributionValue_Exemplar_default_instance_;
class DistributionValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributionValue> _instance;
} _DistributionValue_default_instance_;
class SummaryValue_Snapshot_ValueAtPercentileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SummaryValue_Snapshot_ValueAtPercentile> _instance;
} _SummaryValue_Snapshot_ValueAtPercentile_default_instance_;
class SummaryValue_SnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SummaryValue_Snapshot> _instance;
} _SummaryValue_Snapshot_default_instance_;
class SummaryValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SummaryValue> _instance;
} _SummaryValue_default_instance_;
}  // namespace v1
}  // namespace metrics
}  // namespace proto
}  // namespace opencensus
static void InitDefaultsMetric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_Metric_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Metric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMetric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,
      &scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,
      &scc_info_Resource_opencensus_2fproto_2fresource_2fv1_2fresource_2eproto.base,}};

static void InitDefaultsMetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_MetricDescriptor_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::MetricDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::MetricDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsLabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_LabelKey_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::LabelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::LabelKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {}};

static void InitDefaultsTimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_TimeSeries_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::TimeSeries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::TimeSeries::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,
      &scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsLabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_LabelValue_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::LabelValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::LabelValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {}};

static void InitDefaultsPoint_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_Point_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPoint_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,
      &scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsDistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_Explicit_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {}};

static void InitDefaultsDistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_DistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsDistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_Bucket_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue_Bucket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::DistributionValue_Bucket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsDistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse();
  }
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {}};

static void InitDefaultsDistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue_Exemplar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsDistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_DistributionValue_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::DistributionValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::DistributionValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,
      &scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsSummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_ValueAtPercentile_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {}};

static void InitDefaultsSummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::SummaryValue_Snapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_SummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

static void InitDefaultsSummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opencensus::proto::metrics::v1::_SummaryValue_default_instance_;
    new (ptr) ::opencensus::proto::metrics::v1::SummaryValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opencensus::proto::metrics::v1::SummaryValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto}, {
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base,}};

void InitDefaults_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Metric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Metric, metric_descriptor_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Metric, timeseries_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Metric, resource_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, name_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, description_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, unit_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, type_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::MetricDescriptor, label_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelKey, key_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelKey, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::TimeSeries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::TimeSeries, start_timestamp_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::TimeSeries, label_values_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::TimeSeries, points_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelValue, value_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::LabelValue, has_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Point, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Point, timestamp_),
  offsetof(::opencensus::proto::metrics::v1::PointDefaultTypeInternal, int64_value_),
  offsetof(::opencensus::proto::metrics::v1::PointDefaultTypeInternal, double_value_),
  offsetof(::opencensus::proto::metrics::v1::PointDefaultTypeInternal, distribution_value_),
  offsetof(::opencensus::proto::metrics::v1::PointDefaultTypeInternal, summary_value_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::Point, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit, bounds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::opencensus::proto::metrics::v1::DistributionValue_BucketOptionsDefaultTypeInternal, explicit__),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Bucket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Bucket, count_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Bucket, exemplar_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar, value_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar, timestamp_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue_Exemplar, attachments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, count_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, sum_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, sum_of_squared_deviation_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, bucket_options_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::DistributionValue, buckets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile, percentile_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot, count_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot, sum_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue_Snapshot, percentile_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue, count_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue, sum_),
  PROTOBUF_FIELD_OFFSET(::opencensus::proto::metrics::v1::SummaryValue, snapshot_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::opencensus::proto::metrics::v1::Metric)},
  { 8, -1, sizeof(::opencensus::proto::metrics::v1::MetricDescriptor)},
  { 18, -1, sizeof(::opencensus::proto::metrics::v1::LabelKey)},
  { 25, -1, sizeof(::opencensus::proto::metrics::v1::TimeSeries)},
  { 33, -1, sizeof(::opencensus::proto::metrics::v1::LabelValue)},
  { 40, -1, sizeof(::opencensus::proto::metrics::v1::Point)},
  { 51, -1, sizeof(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit)},
  { 57, -1, sizeof(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions)},
  { 64, -1, sizeof(::opencensus::proto::metrics::v1::DistributionValue_Bucket)},
  { 71, 78, sizeof(::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse)},
  { 80, -1, sizeof(::opencensus::proto::metrics::v1::DistributionValue_Exemplar)},
  { 88, -1, sizeof(::opencensus::proto::metrics::v1::DistributionValue)},
  { 98, -1, sizeof(::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile)},
  { 105, -1, sizeof(::opencensus::proto::metrics::v1::SummaryValue_Snapshot)},
  { 113, -1, sizeof(::opencensus::proto::metrics::v1::SummaryValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_MetricDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_LabelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_TimeSeries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_LabelValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_Explicit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_Bucket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_DistributionValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_ValueAtPercentile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opencensus::proto::metrics::v1::_SummaryValue_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto = {
  {}, AddDescriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, "opencensus/proto/metrics/v1/metrics.proto", schemas,
  file_default_instances, TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto::offsets,
  file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, 15, file_level_enum_descriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, file_level_service_descriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto,
};

const char descriptor_table_protodef_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[] =
  "\n)opencensus/proto/metrics/v1/metrics.pr"
  "oto\022\033opencensus.proto.metrics.v1\032\037google"
  "/protobuf/timestamp.proto\032\036google/protob"
  "uf/wrappers.proto\032+opencensus/proto/reso"
  "urce/v1/resource.proto\"\311\001\n\006Metric\022H\n\021met"
  "ric_descriptor\030\001 \001(\0132-.opencensus.proto."
  "metrics.v1.MetricDescriptor\022;\n\ntimeserie"
  "s\030\002 \003(\0132\'.opencensus.proto.metrics.v1.Ti"
  "meSeries\0228\n\010resource\030\003 \001(\0132&.opencensus."
  "proto.resource.v1.Resource\"\354\002\n\020MetricDes"
  "criptor\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001"
  "(\t\022\014\n\004unit\030\003 \001(\t\022@\n\004type\030\004 \001(\01622.opencen"
  "sus.proto.metrics.v1.MetricDescriptor.Ty"
  "pe\0229\n\nlabel_keys\030\005 \003(\0132%.opencensus.prot"
  "o.metrics.v1.LabelKey\"\251\001\n\004Type\022\017\n\013UNSPEC"
  "IFIED\020\000\022\017\n\013GAUGE_INT64\020\001\022\020\n\014GAUGE_DOUBLE"
  "\020\002\022\026\n\022GAUGE_DISTRIBUTION\020\003\022\024\n\020CUMULATIVE"
  "_INT64\020\004\022\025\n\021CUMULATIVE_DOUBLE\020\005\022\033\n\027CUMUL"
  "ATIVE_DISTRIBUTION\020\006\022\013\n\007SUMMARY\020\007\",\n\010Lab"
  "elKey\022\013\n\003key\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\""
  "\264\001\n\nTimeSeries\0223\n\017start_timestamp\030\001 \001(\0132"
  "\032.google.protobuf.Timestamp\022=\n\014label_val"
  "ues\030\002 \003(\0132\'.opencensus.proto.metrics.v1."
  "LabelValue\0222\n\006points\030\003 \003(\0132\".opencensus."
  "proto.metrics.v1.Point\".\n\nLabelValue\022\r\n\005"
  "value\030\001 \001(\t\022\021\n\thas_value\030\002 \001(\010\"\200\002\n\005Point"
  "\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobuf.Ti"
  "mestamp\022\025\n\013int64_value\030\002 \001(\003H\000\022\026\n\014double"
  "_value\030\003 \001(\001H\000\022L\n\022distribution_value\030\004 \001"
  "(\0132..opencensus.proto.metrics.v1.Distrib"
  "utionValueH\000\022B\n\rsummary_value\030\005 \001(\0132).op"
  "encensus.proto.metrics.v1.SummaryValueH\000"
  "B\007\n\005value\"\302\005\n\021DistributionValue\022\r\n\005count"
  "\030\001 \001(\003\022\013\n\003sum\030\002 \001(\001\022 \n\030sum_of_squared_de"
  "viation\030\003 \001(\001\022T\n\016bucket_options\030\004 \001(\0132<."
  "opencensus.proto.metrics.v1.Distribution"
  "Value.BucketOptions\022F\n\007buckets\030\005 \003(\01325.o"
  "pencensus.proto.metrics.v1.DistributionV"
  "alue.Bucket\032\216\001\n\rBucketOptions\022Y\n\010explici"
  "t\030\001 \001(\0132E.opencensus.proto.metrics.v1.Di"
  "stributionValue.BucketOptions.ExplicitH\000"
  "\032\032\n\010Explicit\022\016\n\006bounds\030\001 \003(\001B\006\n\004type\032b\n\006"
  "Bucket\022\r\n\005count\030\001 \001(\003\022I\n\010exemplar\030\002 \001(\0132"
  "7.opencensus.proto.metrics.v1.Distributi"
  "onValue.Exemplar\032\333\001\n\010Exemplar\022\r\n\005value\030\001"
  " \001(\001\022-\n\ttimestamp\030\002 \001(\0132\032.google.protobu"
  "f.Timestamp\022]\n\013attachments\030\003 \003(\0132H.openc"
  "ensus.proto.metrics.v1.DistributionValue"
  ".Exemplar.AttachmentsEntry\0322\n\020Attachment"
  "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\250"
  "\003\n\014SummaryValue\022*\n\005count\030\001 \001(\0132\033.google."
  "protobuf.Int64Value\022)\n\003sum\030\002 \001(\0132\034.googl"
  "e.protobuf.DoubleValue\022D\n\010snapshot\030\003 \001(\013"
  "22.opencensus.proto.metrics.v1.SummaryVa"
  "lue.Snapshot\032\372\001\n\010Snapshot\022*\n\005count\030\001 \001(\013"
  "2\033.google.protobuf.Int64Value\022)\n\003sum\030\002 \001"
  "(\0132\034.google.protobuf.DoubleValue\022_\n\021perc"
  "entile_values\030\003 \003(\0132D.opencensus.proto.m"
  "etrics.v1.SummaryValue.Snapshot.ValueAtP"
  "ercentile\0326\n\021ValueAtPercentile\022\022\n\npercen"
  "tile\030\001 \001(\001\022\r\n\005value\030\002 \001(\001B\224\001\n\036io.opencen"
  "sus.proto.metrics.v1B\014MetricsProtoP\001ZDgi"
  "thub.com/census-instrumentation/opencens"
  "us-proto/gen-go/metrics/v1\352\002\033OpenCensus."
  "Proto.Metrics.V1b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto = {
  false, InitDefaults_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, 
  descriptor_table_protodef_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto,
  "opencensus/proto/metrics/v1/metrics.proto", &assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, 2584,
};

void AddDescriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
    ::AddDescriptors_opencensus_2fproto_2fresource_2fv1_2fresource_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto = []() { AddDescriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto(); return true; }();
namespace opencensus {
namespace proto {
namespace metrics {
namespace v1 {
const ::google::protobuf::EnumDescriptor* MetricDescriptor_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return file_level_enum_descriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[0];
}
bool MetricDescriptor_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetricDescriptor_Type MetricDescriptor::UNSPECIFIED;
const MetricDescriptor_Type MetricDescriptor::GAUGE_INT64;
const MetricDescriptor_Type MetricDescriptor::GAUGE_DOUBLE;
const MetricDescriptor_Type MetricDescriptor::GAUGE_DISTRIBUTION;
const MetricDescriptor_Type MetricDescriptor::CUMULATIVE_INT64;
const MetricDescriptor_Type MetricDescriptor::CUMULATIVE_DOUBLE;
const MetricDescriptor_Type MetricDescriptor::CUMULATIVE_DISTRIBUTION;
const MetricDescriptor_Type MetricDescriptor::SUMMARY;
const MetricDescriptor_Type MetricDescriptor::Type_MIN;
const MetricDescriptor_Type MetricDescriptor::Type_MAX;
const int MetricDescriptor::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Metric::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_Metric_default_instance_._instance.get_mutable()->metric_descriptor_ = const_cast< ::opencensus::proto::metrics::v1::MetricDescriptor*>(
      ::opencensus::proto::metrics::v1::MetricDescriptor::internal_default_instance());
  ::opencensus::proto::metrics::v1::_Metric_default_instance_._instance.get_mutable()->resource_ = const_cast< ::opencensus::proto::resource::v1::Resource*>(
      ::opencensus::proto::resource::v1::Resource::internal_default_instance());
}
class Metric::HasBitSetters {
 public:
  static const ::opencensus::proto::metrics::v1::MetricDescriptor& metric_descriptor(const Metric* msg);
  static const ::opencensus::proto::resource::v1::Resource& resource(const Metric* msg);
};

const ::opencensus::proto::metrics::v1::MetricDescriptor&
Metric::HasBitSetters::metric_descriptor(const Metric* msg) {
  return *msg->metric_descriptor_;
}
const ::opencensus::proto::resource::v1::Resource&
Metric::HasBitSetters::resource(const Metric* msg) {
  return *msg->resource_;
}
void Metric::clear_resource() {
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kMetricDescriptorFieldNumber;
const int Metric::kTimeseriesFieldNumber;
const int Metric::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      timeseries_(from.timeseries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metric_descriptor()) {
    metric_descriptor_ = new ::opencensus::proto::metrics::v1::MetricDescriptor(*from.metric_descriptor_);
  } else {
    metric_descriptor_ = nullptr;
  }
  if (from.has_resource()) {
    resource_ = new ::opencensus::proto::resource::v1::Resource(*from.resource_);
  } else {
    resource_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.Metric)
}

void Metric::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Metric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&metric_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_) -
      reinterpret_cast<char*>(&metric_descriptor_)) + sizeof(resource_));
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
  if (this != internal_default_instance()) delete metric_descriptor_;
  if (this != internal_default_instance()) delete resource_;
}

void Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metric& Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Metric_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeseries_.Clear();
  if (GetArenaNoVirtual() == nullptr && metric_descriptor_ != nullptr) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Metric::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Metric*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::MetricDescriptor::_InternalParse;
        object = msg->mutable_metric_descriptor();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::TimeSeries::_InternalParse;
          object = msg->add_timeseries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .opencensus.proto.resource.v1.Resource resource = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::resource::v1::Resource::_InternalParse;
        object = msg->mutable_resource();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timeseries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.resource.v1.Resource resource = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.Metric)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
  if (this->has_metric_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::metric_descriptor(this), output);
  }

  // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->timeseries(static_cast<int>(i)),
      output);
  }

  // .opencensus.proto.resource.v1.Resource resource = 3;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::resource(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
  if (this->has_metric_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::metric_descriptor(this), target);
  }

  // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->timeseries(static_cast<int>(i)), target);
  }

  // .opencensus.proto.resource.v1.Resource resource = 3;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::resource(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.Metric)
  return target;
}

size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.Metric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->timeseries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timeseries(static_cast<int>(i)));
    }
  }

  // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metric_descriptor_);
  }

  // .opencensus.proto.resource.v1.Resource resource = 3;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::DynamicCastToGenerated<Metric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timeseries_.MergeFrom(from.timeseries_);
  if (from.has_metric_descriptor()) {
    mutable_metric_descriptor()->::opencensus::proto::metrics::v1::MetricDescriptor::MergeFrom(from.metric_descriptor());
  }
  if (from.has_resource()) {
    mutable_resource()->::opencensus::proto::resource::v1::Resource::MergeFrom(from.resource());
  }
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&timeseries_)->InternalSwap(CastToBase(&other->timeseries_));
  swap(metric_descriptor_, other->metric_descriptor_);
  swap(resource_, other->resource_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetricDescriptor::InitAsDefaultInstance() {
}
class MetricDescriptor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricDescriptor::kNameFieldNumber;
const int MetricDescriptor::kDescriptionFieldNumber;
const int MetricDescriptor::kUnitFieldNumber;
const int MetricDescriptor::kTypeFieldNumber;
const int MetricDescriptor::kLabelKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricDescriptor::MetricDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.MetricDescriptor)
}
MetricDescriptor::MetricDescriptor(const MetricDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      label_keys_(from.label_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit().size() > 0) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.MetricDescriptor)
}

void MetricDescriptor::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

MetricDescriptor::~MetricDescriptor() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.MetricDescriptor)
  SharedDtor();
}

void MetricDescriptor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MetricDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetricDescriptor& MetricDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetricDescriptor_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void MetricDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_keys_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetricDescriptor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetricDescriptor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.MetricDescriptor.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.MetricDescriptor.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string unit = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.MetricDescriptor.unit");
        object = msg->mutable_unit();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::opencensus::proto::metrics::v1::MetricDescriptor_Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::LabelKey::_InternalParse;
          object = msg->add_label_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetricDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.MetricDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.MetricDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.MetricDescriptor.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), static_cast<int>(this->unit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.MetricDescriptor.unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::opencensus::proto::metrics::v1::MetricDescriptor_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_label_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.MetricDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.MetricDescriptor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetricDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string unit = 3;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unit(), output);
  }

  // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->label_keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.MetricDescriptor)
}

::google::protobuf::uint8* MetricDescriptor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string unit = 3;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.MetricDescriptor.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unit(), target);
  }

  // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->label_keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.MetricDescriptor)
  return target;
}

size_t MetricDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.MetricDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->label_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->label_keys(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string unit = 3;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.MetricDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricDescriptor* source =
      ::google::protobuf::DynamicCastToGenerated<MetricDescriptor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.MetricDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.MetricDescriptor)
    MergeFrom(*source);
  }
}

void MetricDescriptor::MergeFrom(const MetricDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.MetricDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_keys_.MergeFrom(from.label_keys_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MetricDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.MetricDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricDescriptor::CopyFrom(const MetricDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.MetricDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricDescriptor::IsInitialized() const {
  return true;
}

void MetricDescriptor::Swap(MetricDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricDescriptor::InternalSwap(MetricDescriptor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&label_keys_)->InternalSwap(CastToBase(&other->label_keys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unit_.Swap(&other->unit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata MetricDescriptor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LabelKey::InitAsDefaultInstance() {
}
class LabelKey::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabelKey::kKeyFieldNumber;
const int LabelKey::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelKey::LabelKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.LabelKey)
}
LabelKey::LabelKey(const LabelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.LabelKey)
}

void LabelKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LabelKey::~LabelKey() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.LabelKey)
  SharedDtor();
}

void LabelKey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LabelKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LabelKey& LabelKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LabelKey_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void LabelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LabelKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LabelKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.LabelKey.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.LabelKey.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LabelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.LabelKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.LabelKey.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.LabelKey.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.LabelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.LabelKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LabelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelKey.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.LabelKey)
}

::google::protobuf::uint8* LabelKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.LabelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelKey.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelKey.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.LabelKey)
  return target;
}

size_t LabelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.LabelKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.LabelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelKey* source =
      ::google::protobuf::DynamicCastToGenerated<LabelKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.LabelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.LabelKey)
    MergeFrom(*source);
  }
}

void LabelKey::MergeFrom(const LabelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.LabelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void LabelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.LabelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelKey::CopyFrom(const LabelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.LabelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelKey::IsInitialized() const {
  return true;
}

void LabelKey::Swap(LabelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelKey::InternalSwap(LabelKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LabelKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TimeSeries::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_TimeSeries_default_instance_._instance.get_mutable()->start_timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class TimeSeries::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& start_timestamp(const TimeSeries* msg);
};

const ::google::protobuf::Timestamp&
TimeSeries::HasBitSetters::start_timestamp(const TimeSeries* msg) {
  return *msg->start_timestamp_;
}
void TimeSeries::clear_start_timestamp() {
  if (GetArenaNoVirtual() == nullptr && start_timestamp_ != nullptr) {
    delete start_timestamp_;
  }
  start_timestamp_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeSeries::kStartTimestampFieldNumber;
const int TimeSeries::kLabelValuesFieldNumber;
const int TimeSeries::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeSeries::TimeSeries()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.TimeSeries)
}
TimeSeries::TimeSeries(const TimeSeries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      label_values_(from.label_values_),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_timestamp()) {
    start_timestamp_ = new ::google::protobuf::Timestamp(*from.start_timestamp_);
  } else {
    start_timestamp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.TimeSeries)
}

void TimeSeries::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  start_timestamp_ = nullptr;
}

TimeSeries::~TimeSeries() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.TimeSeries)
  SharedDtor();
}

void TimeSeries::SharedDtor() {
  if (this != internal_default_instance()) delete start_timestamp_;
}

void TimeSeries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeSeries& TimeSeries::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TimeSeries_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void TimeSeries::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.TimeSeries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_values_.Clear();
  points_.Clear();
  if (GetArenaNoVirtual() == nullptr && start_timestamp_ != nullptr) {
    delete start_timestamp_;
  }
  start_timestamp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TimeSeries::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TimeSeries*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp start_timestamp = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_start_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::LabelValue::_InternalParse;
          object = msg->add_label_values();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .opencensus.proto.metrics.v1.Point points = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::Point::_InternalParse;
          object = msg->add_points();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TimeSeries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.TimeSeries)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp start_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_label_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.Point points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.TimeSeries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.TimeSeries)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TimeSeries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.TimeSeries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::start_timestamp(this), output);
  }

  // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->label_values(static_cast<int>(i)),
      output);
  }

  // repeated .opencensus.proto.metrics.v1.Point points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->points(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.TimeSeries)
}

::google::protobuf::uint8* TimeSeries::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.TimeSeries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::start_timestamp(this), target);
  }

  // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->label_values(static_cast<int>(i)), target);
  }

  // repeated .opencensus.proto.metrics.v1.Point points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->points(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.TimeSeries)
  return target;
}

size_t TimeSeries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.TimeSeries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->label_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->label_values(static_cast<int>(i)));
    }
  }

  // repeated .opencensus.proto.metrics.v1.Point points = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp start_timestamp = 1;
  if (this->has_start_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeSeries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.TimeSeries)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeSeries* source =
      ::google::protobuf::DynamicCastToGenerated<TimeSeries>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.TimeSeries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.TimeSeries)
    MergeFrom(*source);
  }
}

void TimeSeries::MergeFrom(const TimeSeries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.TimeSeries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_values_.MergeFrom(from.label_values_);
  points_.MergeFrom(from.points_);
  if (from.has_start_timestamp()) {
    mutable_start_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.start_timestamp());
  }
}

void TimeSeries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.TimeSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeSeries::CopyFrom(const TimeSeries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.TimeSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeSeries::IsInitialized() const {
  return true;
}

void TimeSeries::Swap(TimeSeries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeSeries::InternalSwap(TimeSeries* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&label_values_)->InternalSwap(CastToBase(&other->label_values_));
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  swap(start_timestamp_, other->start_timestamp_);
}

::google::protobuf::Metadata TimeSeries::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LabelValue::InitAsDefaultInstance() {
}
class LabelValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabelValue::kValueFieldNumber;
const int LabelValue::kHasValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelValue::LabelValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.LabelValue)
}
LabelValue::LabelValue(const LabelValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  has_value_ = from.has_value_;
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.LabelValue)
}

void LabelValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  has_value_ = false;
}

LabelValue::~LabelValue() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.LabelValue)
  SharedDtor();
}

void LabelValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LabelValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LabelValue& LabelValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LabelValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void LabelValue::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.LabelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  has_value_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LabelValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LabelValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opencensus.proto.metrics.v1.LabelValue.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool has_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_has_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LabelValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.LabelValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.LabelValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.LabelValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.LabelValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LabelValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.LabelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // bool has_value = 2;
  if (this->has_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.LabelValue)
}

::google::protobuf::uint8* LabelValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.LabelValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opencensus.proto.metrics.v1.LabelValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // bool has_value = 2;
  if (this->has_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.LabelValue)
  return target;
}

size_t LabelValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.LabelValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // bool has_value = 2;
  if (this->has_value() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabelValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.LabelValue)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelValue* source =
      ::google::protobuf::DynamicCastToGenerated<LabelValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.LabelValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.LabelValue)
    MergeFrom(*source);
  }
}

void LabelValue::MergeFrom(const LabelValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.LabelValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_value() != 0) {
    set_has_value(from.has_value());
  }
}

void LabelValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.LabelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelValue::CopyFrom(const LabelValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.LabelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelValue::IsInitialized() const {
  return true;
}

void LabelValue::Swap(LabelValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelValue::InternalSwap(LabelValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(has_value_, other->has_value_);
}

::google::protobuf::Metadata LabelValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_Point_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::opencensus::proto::metrics::v1::_Point_default_instance_.int64_value_ = PROTOBUF_LONGLONG(0);
  ::opencensus::proto::metrics::v1::_Point_default_instance_.double_value_ = 0;
  ::opencensus::proto::metrics::v1::_Point_default_instance_.distribution_value_ = const_cast< ::opencensus::proto::metrics::v1::DistributionValue*>(
      ::opencensus::proto::metrics::v1::DistributionValue::internal_default_instance());
  ::opencensus::proto::metrics::v1::_Point_default_instance_.summary_value_ = const_cast< ::opencensus::proto::metrics::v1::SummaryValue*>(
      ::opencensus::proto::metrics::v1::SummaryValue::internal_default_instance());
}
class Point::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& timestamp(const Point* msg);
  static const ::opencensus::proto::metrics::v1::DistributionValue& distribution_value(const Point* msg);
  static const ::opencensus::proto::metrics::v1::SummaryValue& summary_value(const Point* msg);
};

const ::google::protobuf::Timestamp&
Point::HasBitSetters::timestamp(const Point* msg) {
  return *msg->timestamp_;
}
const ::opencensus::proto::metrics::v1::DistributionValue&
Point::HasBitSetters::distribution_value(const Point* msg) {
  return *msg->value_.distribution_value_;
}
const ::opencensus::proto::metrics::v1::SummaryValue&
Point::HasBitSetters::summary_value(const Point* msg) {
  return *msg->value_.summary_value_;
}
void Point::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void Point::set_allocated_distribution_value(::opencensus::proto::metrics::v1::DistributionValue* distribution_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (distribution_value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      distribution_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distribution_value, submessage_arena);
    }
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.Point.distribution_value)
}
void Point::set_allocated_summary_value(::opencensus::proto::metrics::v1::SummaryValue* summary_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (summary_value) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      summary_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, summary_value, submessage_arena);
    }
    set_has_summary_value();
    value_.summary_value_ = summary_value;
  }
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.Point.summary_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kTimestampFieldNumber;
const int Point::kInt64ValueFieldNumber;
const int Point::kDoubleValueFieldNumber;
const int Point::kDistributionValueFieldNumber;
const int Point::kSummaryValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::opencensus::proto::metrics::v1::DistributionValue::MergeFrom(from.distribution_value());
      break;
    }
    case kSummaryValue: {
      mutable_summary_value()->::opencensus::proto::metrics::v1::SummaryValue::MergeFrom(from.summary_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.Point)
}

void Point::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  timestamp_ = nullptr;
  clear_has_value();
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.Point)
  SharedDtor();
}

void Point::SharedDtor() {
  if (this != internal_default_instance()) delete timestamp_;
  if (has_value()) {
    clear_value();
  }
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Point_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void Point::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:opencensus.proto.metrics.v1.Point)
  switch (value_case()) {
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kDistributionValue: {
      delete value_.distribution_value_;
      break;
    }
    case kSummaryValue: {
      delete value_.summary_value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  clear_value();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Point::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Point*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 int64_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_int64_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double double_value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_double_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::DistributionValue::_InternalParse;
        object = msg->mutable_distribution_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::SummaryValue::_InternalParse;
        object = msg->mutable_summary_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distribution_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summary_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.Point)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::timestamp(this), output);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
  }

  // double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
  if (has_distribution_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::distribution_value(this), output);
  }

  // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
  if (has_summary_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::summary_value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::timestamp(this), target);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
  }

  // double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
  if (has_distribution_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::distribution_value(this), target);
  }

  // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
  if (has_summary_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::summary_value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  switch (value_case()) {
    // int64 int64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
    case kDistributionValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.distribution_value_);
      break;
    }
    // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
    case kSummaryValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.summary_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::DynamicCastToGenerated<Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  switch (from.value_case()) {
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::opencensus::proto::metrics::v1::DistributionValue::MergeFrom(from.distribution_value());
      break;
    }
    case kSummaryValue: {
      mutable_summary_value()->::opencensus::proto::metrics::v1::SummaryValue::MergeFrom(from.summary_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(timestamp_, other->timestamp_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DistributionValue_BucketOptions_Explicit::InitAsDefaultInstance() {
}
class DistributionValue_BucketOptions_Explicit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributionValue_BucketOptions_Explicit::kBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributionValue_BucketOptions_Explicit::DistributionValue_BucketOptions_Explicit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
}
DistributionValue_BucketOptions_Explicit::DistributionValue_BucketOptions_Explicit(const DistributionValue_BucketOptions_Explicit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      bounds_(from.bounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
}

void DistributionValue_BucketOptions_Explicit::SharedCtor() {
}

DistributionValue_BucketOptions_Explicit::~DistributionValue_BucketOptions_Explicit() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  SharedDtor();
}

void DistributionValue_BucketOptions_Explicit::SharedDtor() {
}

void DistributionValue_BucketOptions_Explicit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistributionValue_BucketOptions_Explicit& DistributionValue_BucketOptions_Explicit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DistributionValue_BucketOptions_Explicit_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DistributionValue_BucketOptions_Explicit::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bounds_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistributionValue_BucketOptions_Explicit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DistributionValue_BucketOptions_Explicit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated double bounds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedDoubleParser;
          object = msg->mutable_bounds();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        do {
          msg->add_bounds(::google::protobuf::io::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 9 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue_BucketOptions_Explicit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double bounds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bounds())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_bounds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistributionValue_BucketOptions_Explicit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bounds_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->bounds().data(), this->bounds_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
}

::google::protobuf::uint8* DistributionValue_BucketOptions_Explicit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _bounds_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bounds_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  return target;
}

size_t DistributionValue_BucketOptions_Explicit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double bounds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _bounds_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributionValue_BucketOptions_Explicit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributionValue_BucketOptions_Explicit* source =
      ::google::protobuf::DynamicCastToGenerated<DistributionValue_BucketOptions_Explicit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
    MergeFrom(*source);
  }
}

void DistributionValue_BucketOptions_Explicit::MergeFrom(const DistributionValue_BucketOptions_Explicit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bounds_.MergeFrom(from.bounds_);
}

void DistributionValue_BucketOptions_Explicit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributionValue_BucketOptions_Explicit::CopyFrom(const DistributionValue_BucketOptions_Explicit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributionValue_BucketOptions_Explicit::IsInitialized() const {
  return true;
}

void DistributionValue_BucketOptions_Explicit::Swap(DistributionValue_BucketOptions_Explicit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributionValue_BucketOptions_Explicit::InternalSwap(DistributionValue_BucketOptions_Explicit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bounds_.InternalSwap(&other->bounds_);
}

::google::protobuf::Metadata DistributionValue_BucketOptions_Explicit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DistributionValue_BucketOptions::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_default_instance_.explicit__ = const_cast< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit*>(
      ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit::internal_default_instance());
}
class DistributionValue_BucketOptions::HasBitSetters {
 public:
  static const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit& explicit_(const DistributionValue_BucketOptions* msg);
};

const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit&
DistributionValue_BucketOptions::HasBitSetters::explicit_(const DistributionValue_BucketOptions* msg) {
  return *msg->type_.explicit__;
}
void DistributionValue_BucketOptions::set_allocated_explicit_(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* explicit_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (explicit_) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      explicit_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explicit_, submessage_arena);
    }
    set_has_explicit_();
    type_.explicit__ = explicit_;
  }
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.explicit)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributionValue_BucketOptions::kExplicitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributionValue_BucketOptions::DistributionValue_BucketOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
}
DistributionValue_BucketOptions::DistributionValue_BucketOptions(const DistributionValue_BucketOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kExplicit: {
      mutable_explicit_()->::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit::MergeFrom(from.explicit_());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
}

void DistributionValue_BucketOptions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  clear_has_type();
}

DistributionValue_BucketOptions::~DistributionValue_BucketOptions() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  SharedDtor();
}

void DistributionValue_BucketOptions::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void DistributionValue_BucketOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistributionValue_BucketOptions& DistributionValue_BucketOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DistributionValue_BucketOptions_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DistributionValue_BucketOptions::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  switch (type_case()) {
    case kExplicit: {
      delete type_.explicit__;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void DistributionValue_BucketOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistributionValue_BucketOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DistributionValue_BucketOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit::_InternalParse;
        object = msg->mutable_explicit_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue_BucketOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explicit_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistributionValue_BucketOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
  if (has_explicit_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::explicit_(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
}

::google::protobuf::uint8* DistributionValue_BucketOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
  if (has_explicit_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::explicit_(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  return target;
}

size_t DistributionValue_BucketOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
    case kExplicit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.explicit__);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributionValue_BucketOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributionValue_BucketOptions* source =
      ::google::protobuf::DynamicCastToGenerated<DistributionValue_BucketOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
    MergeFrom(*source);
  }
}

void DistributionValue_BucketOptions::MergeFrom(const DistributionValue_BucketOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kExplicit: {
      mutable_explicit_()->::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit::MergeFrom(from.explicit_());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void DistributionValue_BucketOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributionValue_BucketOptions::CopyFrom(const DistributionValue_BucketOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributionValue_BucketOptions::IsInitialized() const {
  return true;
}

void DistributionValue_BucketOptions::Swap(DistributionValue_BucketOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributionValue_BucketOptions::InternalSwap(DistributionValue_BucketOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata DistributionValue_BucketOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DistributionValue_Bucket::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_DistributionValue_Bucket_default_instance_._instance.get_mutable()->exemplar_ = const_cast< ::opencensus::proto::metrics::v1::DistributionValue_Exemplar*>(
      ::opencensus::proto::metrics::v1::DistributionValue_Exemplar::internal_default_instance());
}
class DistributionValue_Bucket::HasBitSetters {
 public:
  static const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar& exemplar(const DistributionValue_Bucket* msg);
};

const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar&
DistributionValue_Bucket::HasBitSetters::exemplar(const DistributionValue_Bucket* msg) {
  return *msg->exemplar_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributionValue_Bucket::kCountFieldNumber;
const int DistributionValue_Bucket::kExemplarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributionValue_Bucket::DistributionValue_Bucket()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.DistributionValue.Bucket)
}
DistributionValue_Bucket::DistributionValue_Bucket(const DistributionValue_Bucket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exemplar()) {
    exemplar_ = new ::opencensus::proto::metrics::v1::DistributionValue_Exemplar(*from.exemplar_);
  } else {
    exemplar_ = nullptr;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.DistributionValue.Bucket)
}

void DistributionValue_Bucket::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&exemplar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&exemplar_)) + sizeof(count_));
}

DistributionValue_Bucket::~DistributionValue_Bucket() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  SharedDtor();
}

void DistributionValue_Bucket::SharedDtor() {
  if (this != internal_default_instance()) delete exemplar_;
}

void DistributionValue_Bucket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistributionValue_Bucket& DistributionValue_Bucket::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DistributionValue_Bucket_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DistributionValue_Bucket::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exemplar_ != nullptr) {
    delete exemplar_;
  }
  exemplar_ = nullptr;
  count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistributionValue_Bucket::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DistributionValue_Bucket*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::DistributionValue_Exemplar::_InternalParse;
        object = msg->mutable_exemplar();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue_Bucket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exemplar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistributionValue_Bucket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
  if (this->has_exemplar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::exemplar(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.DistributionValue.Bucket)
}

::google::protobuf::uint8* DistributionValue_Bucket::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
  if (this->has_exemplar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::exemplar(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  return target;
}

size_t DistributionValue_Bucket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
  if (this->has_exemplar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exemplar_);
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributionValue_Bucket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributionValue_Bucket* source =
      ::google::protobuf::DynamicCastToGenerated<DistributionValue_Bucket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.DistributionValue.Bucket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.DistributionValue.Bucket)
    MergeFrom(*source);
  }
}

void DistributionValue_Bucket::MergeFrom(const DistributionValue_Bucket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exemplar()) {
    mutable_exemplar()->::opencensus::proto::metrics::v1::DistributionValue_Exemplar::MergeFrom(from.exemplar());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void DistributionValue_Bucket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributionValue_Bucket::CopyFrom(const DistributionValue_Bucket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.Bucket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributionValue_Bucket::IsInitialized() const {
  return true;
}

void DistributionValue_Bucket::Swap(DistributionValue_Bucket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributionValue_Bucket::InternalSwap(DistributionValue_Bucket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exemplar_, other->exemplar_);
  swap(count_, other->count_);
}

::google::protobuf::Metadata DistributionValue_Bucket::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse() {}
DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::MergeFrom(const DistributionValue_Exemplar_AttachmentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[9];
}
void DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void DistributionValue_Exemplar::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class DistributionValue_Exemplar::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& timestamp(const DistributionValue_Exemplar* msg);
};

const ::google::protobuf::Timestamp&
DistributionValue_Exemplar::HasBitSetters::timestamp(const DistributionValue_Exemplar* msg) {
  return *msg->timestamp_;
}
void DistributionValue_Exemplar::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributionValue_Exemplar::kValueFieldNumber;
const int DistributionValue_Exemplar::kTimestampFieldNumber;
const int DistributionValue_Exemplar::kAttachmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributionValue_Exemplar::DistributionValue_Exemplar()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
}
DistributionValue_Exemplar::DistributionValue_Exemplar(const DistributionValue_Exemplar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attachments_.MergeFrom(from.attachments_);
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
}

void DistributionValue_Exemplar::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
}

DistributionValue_Exemplar::~DistributionValue_Exemplar() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  SharedDtor();
}

void DistributionValue_Exemplar::SharedDtor() {
  if (this != internal_default_instance()) delete timestamp_;
}

void DistributionValue_Exemplar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistributionValue_Exemplar& DistributionValue_Exemplar::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DistributionValue_Exemplar_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DistributionValue_Exemplar::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistributionValue_Exemplar::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DistributionValue_Exemplar*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> attachments = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attachments_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue_Exemplar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> attachments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DistributionValue_Exemplar_AttachmentsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              DistributionValue_Exemplar_AttachmentsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&attachments_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistributionValue_Exemplar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::timestamp(this), output);
  }

  // map<string, string> attachments = 3;
  if (!this->attachments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attachments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attachments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attachments().begin();
          it != this->attachments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attachments_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attachments().begin();
          it != this->attachments().end(); ++it) {
        entry.reset(attachments_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
}

::google::protobuf::uint8* DistributionValue_Exemplar::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::timestamp(this), target);
  }

  // map<string, string> attachments = 3;
  if (!this->attachments().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opencensus.proto.metrics.v1.DistributionValue.Exemplar.AttachmentsEntry.value");
      }
    };

    if (false &&
        this->attachments().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attachments().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attachments().begin();
          it != this->attachments().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attachments_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attachments().begin();
          it != this->attachments().end(); ++it) {
        entry.reset(attachments_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  return target;
}

size_t DistributionValue_Exemplar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> attachments = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attachments_size());
  {
    ::std::unique_ptr<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->attachments().begin();
        it != this->attachments().end(); ++it) {
      entry.reset(attachments_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // double value = 1;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributionValue_Exemplar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributionValue_Exemplar* source =
      ::google::protobuf::DynamicCastToGenerated<DistributionValue_Exemplar>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
    MergeFrom(*source);
  }
}

void DistributionValue_Exemplar::MergeFrom(const DistributionValue_Exemplar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DistributionValue_Exemplar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributionValue_Exemplar::CopyFrom(const DistributionValue_Exemplar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributionValue_Exemplar::IsInitialized() const {
  return true;
}

void DistributionValue_Exemplar::Swap(DistributionValue_Exemplar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributionValue_Exemplar::InternalSwap(DistributionValue_Exemplar* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attachments_.Swap(&other->attachments_);
  swap(timestamp_, other->timestamp_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata DistributionValue_Exemplar::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DistributionValue::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_DistributionValue_default_instance_._instance.get_mutable()->bucket_options_ = const_cast< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions*>(
      ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions::internal_default_instance());
}
class DistributionValue::HasBitSetters {
 public:
  static const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions& bucket_options(const DistributionValue* msg);
};

const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions&
DistributionValue::HasBitSetters::bucket_options(const DistributionValue* msg) {
  return *msg->bucket_options_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributionValue::kCountFieldNumber;
const int DistributionValue::kSumFieldNumber;
const int DistributionValue::kSumOfSquaredDeviationFieldNumber;
const int DistributionValue::kBucketOptionsFieldNumber;
const int DistributionValue::kBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributionValue::DistributionValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.DistributionValue)
}
DistributionValue::DistributionValue(const DistributionValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      buckets_(from.buckets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bucket_options()) {
    bucket_options_ = new ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions(*from.bucket_options_);
  } else {
    bucket_options_ = nullptr;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.DistributionValue)
}

void DistributionValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&bucket_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&bucket_options_)) + sizeof(sum_of_squared_deviation_));
}

DistributionValue::~DistributionValue() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.DistributionValue)
  SharedDtor();
}

void DistributionValue::SharedDtor() {
  if (this != internal_default_instance()) delete bucket_options_;
}

void DistributionValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistributionValue& DistributionValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DistributionValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DistributionValue::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.DistributionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buckets_.Clear();
  if (GetArenaNoVirtual() == nullptr && bucket_options_ != nullptr) {
    delete bucket_options_;
  }
  bucket_options_ = nullptr;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistributionValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DistributionValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double sum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_sum(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double sum_of_squared_deviation = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_sum_of_squared_deviation(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions::_InternalParse;
        object = msg->mutable_bucket_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::DistributionValue_Bucket::_InternalParse;
          object = msg->add_buckets();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistributionValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.DistributionValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sum_of_squared_deviation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_of_squared_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bucket_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.DistributionValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.DistributionValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistributionValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.DistributionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // double sum = 2;
  if (this->sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->sum(), output);
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->sum_of_squared_deviation(), output);
  }

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
  if (this->has_bucket_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::bucket_options(this), output);
  }

  // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buckets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->buckets(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.DistributionValue)
}

::google::protobuf::uint8* DistributionValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.DistributionValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // double sum = 2;
  if (this->sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->sum(), target);
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->sum_of_squared_deviation(), target);
  }

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
  if (this->has_bucket_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::bucket_options(this), target);
  }

  // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buckets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->buckets(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.DistributionValue)
  return target;
}

size_t DistributionValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.DistributionValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->buckets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buckets(static_cast<int>(i)));
    }
  }

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
  if (this->has_bucket_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bucket_options_);
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // double sum = 2;
  if (this->sum() != 0) {
    total_size += 1 + 8;
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributionValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.DistributionValue)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributionValue* source =
      ::google::protobuf::DynamicCastToGenerated<DistributionValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.DistributionValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.DistributionValue)
    MergeFrom(*source);
  }
}

void DistributionValue::MergeFrom(const DistributionValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.DistributionValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buckets_.MergeFrom(from.buckets_);
  if (from.has_bucket_options()) {
    mutable_bucket_options()->::opencensus::proto::metrics::v1::DistributionValue_BucketOptions::MergeFrom(from.bucket_options());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.sum() != 0) {
    set_sum(from.sum());
  }
  if (from.sum_of_squared_deviation() != 0) {
    set_sum_of_squared_deviation(from.sum_of_squared_deviation());
  }
}

void DistributionValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.DistributionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributionValue::CopyFrom(const DistributionValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.DistributionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributionValue::IsInitialized() const {
  return true;
}

void DistributionValue::Swap(DistributionValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributionValue::InternalSwap(DistributionValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&buckets_)->InternalSwap(CastToBase(&other->buckets_));
  swap(bucket_options_, other->bucket_options_);
  swap(count_, other->count_);
  swap(sum_, other->sum_);
  swap(sum_of_squared_deviation_, other->sum_of_squared_deviation_);
}

::google::protobuf::Metadata DistributionValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SummaryValue_Snapshot_ValueAtPercentile::InitAsDefaultInstance() {
}
class SummaryValue_Snapshot_ValueAtPercentile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SummaryValue_Snapshot_ValueAtPercentile::kPercentileFieldNumber;
const int SummaryValue_Snapshot_ValueAtPercentile::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SummaryValue_Snapshot_ValueAtPercentile::SummaryValue_Snapshot_ValueAtPercentile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
}
SummaryValue_Snapshot_ValueAtPercentile::SummaryValue_Snapshot_ValueAtPercentile(const SummaryValue_Snapshot_ValueAtPercentile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&percentile_, &from.percentile_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
}

void SummaryValue_Snapshot_ValueAtPercentile::SharedCtor() {
  ::memset(&percentile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
}

SummaryValue_Snapshot_ValueAtPercentile::~SummaryValue_Snapshot_ValueAtPercentile() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  SharedDtor();
}

void SummaryValue_Snapshot_ValueAtPercentile::SharedDtor() {
}

void SummaryValue_Snapshot_ValueAtPercentile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryValue_Snapshot_ValueAtPercentile& SummaryValue_Snapshot_ValueAtPercentile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SummaryValue_Snapshot_ValueAtPercentile_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryValue_Snapshot_ValueAtPercentile::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&percentile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&percentile_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SummaryValue_Snapshot_ValueAtPercentile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SummaryValue_Snapshot_ValueAtPercentile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double percentile = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_percentile(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SummaryValue_Snapshot_ValueAtPercentile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double percentile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &percentile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SummaryValue_Snapshot_ValueAtPercentile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double percentile = 1;
  if (this->percentile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->percentile(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
}

::google::protobuf::uint8* SummaryValue_Snapshot_ValueAtPercentile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double percentile = 1;
  if (this->percentile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->percentile(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  return target;
}

size_t SummaryValue_Snapshot_ValueAtPercentile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double percentile = 1;
  if (this->percentile() != 0) {
    total_size += 1 + 8;
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryValue_Snapshot_ValueAtPercentile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryValue_Snapshot_ValueAtPercentile* source =
      ::google::protobuf::DynamicCastToGenerated<SummaryValue_Snapshot_ValueAtPercentile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
    MergeFrom(*source);
  }
}

void SummaryValue_Snapshot_ValueAtPercentile::MergeFrom(const SummaryValue_Snapshot_ValueAtPercentile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.percentile() != 0) {
    set_percentile(from.percentile());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SummaryValue_Snapshot_ValueAtPercentile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryValue_Snapshot_ValueAtPercentile::CopyFrom(const SummaryValue_Snapshot_ValueAtPercentile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryValue_Snapshot_ValueAtPercentile::IsInitialized() const {
  return true;
}

void SummaryValue_Snapshot_ValueAtPercentile::Swap(SummaryValue_Snapshot_ValueAtPercentile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SummaryValue_Snapshot_ValueAtPercentile::InternalSwap(SummaryValue_Snapshot_ValueAtPercentile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(percentile_, other->percentile_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata SummaryValue_Snapshot_ValueAtPercentile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SummaryValue_Snapshot::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_default_instance_._instance.get_mutable()->count_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_default_instance_._instance.get_mutable()->sum_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
class SummaryValue_Snapshot::HasBitSetters {
 public:
  static const ::google::protobuf::Int64Value& count(const SummaryValue_Snapshot* msg);
  static const ::google::protobuf::DoubleValue& sum(const SummaryValue_Snapshot* msg);
};

const ::google::protobuf::Int64Value&
SummaryValue_Snapshot::HasBitSetters::count(const SummaryValue_Snapshot* msg) {
  return *msg->count_;
}
const ::google::protobuf::DoubleValue&
SummaryValue_Snapshot::HasBitSetters::sum(const SummaryValue_Snapshot* msg) {
  return *msg->sum_;
}
void SummaryValue_Snapshot::clear_count() {
  if (GetArenaNoVirtual() == nullptr && count_ != nullptr) {
    delete count_;
  }
  count_ = nullptr;
}
void SummaryValue_Snapshot::clear_sum() {
  if (GetArenaNoVirtual() == nullptr && sum_ != nullptr) {
    delete sum_;
  }
  sum_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SummaryValue_Snapshot::kCountFieldNumber;
const int SummaryValue_Snapshot::kSumFieldNumber;
const int SummaryValue_Snapshot::kPercentileValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SummaryValue_Snapshot::SummaryValue_Snapshot()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
}
SummaryValue_Snapshot::SummaryValue_Snapshot(const SummaryValue_Snapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      percentile_values_(from.percentile_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_count()) {
    count_ = new ::google::protobuf::Int64Value(*from.count_);
  } else {
    count_ = nullptr;
  }
  if (from.has_sum()) {
    sum_ = new ::google::protobuf::DoubleValue(*from.sum_);
  } else {
    sum_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
}

void SummaryValue_Snapshot::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_) -
      reinterpret_cast<char*>(&count_)) + sizeof(sum_));
}

SummaryValue_Snapshot::~SummaryValue_Snapshot() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  SharedDtor();
}

void SummaryValue_Snapshot::SharedDtor() {
  if (this != internal_default_instance()) delete count_;
  if (this != internal_default_instance()) delete sum_;
}

void SummaryValue_Snapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryValue_Snapshot& SummaryValue_Snapshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SummaryValue_Snapshot_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryValue_Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  percentile_values_.Clear();
  if (GetArenaNoVirtual() == nullptr && count_ != nullptr) {
    delete count_;
  }
  count_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sum_ != nullptr) {
    delete sum_;
  }
  sum_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SummaryValue_Snapshot::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SummaryValue_Snapshot*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Int64Value count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int64Value::_InternalParse;
        object = msg->mutable_count();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.DoubleValue sum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::DoubleValue::_InternalParse;
        object = msg->mutable_sum();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile::_InternalParse;
          object = msg->add_percentile_values();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SummaryValue_Snapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue sum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_percentile_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SummaryValue_Snapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::count(this), output);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::sum(this), output);
  }

  // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->percentile_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->percentile_values(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
}

::google::protobuf::uint8* SummaryValue_Snapshot::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::count(this), target);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::sum(this), target);
  }

  // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->percentile_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->percentile_values(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  return target;
}

size_t SummaryValue_Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->percentile_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->percentile_values(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *count_);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sum_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryValue_Snapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryValue_Snapshot* source =
      ::google::protobuf::DynamicCastToGenerated<SummaryValue_Snapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
    MergeFrom(*source);
  }
}

void SummaryValue_Snapshot::MergeFrom(const SummaryValue_Snapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  percentile_values_.MergeFrom(from.percentile_values_);
  if (from.has_count()) {
    mutable_count()->::google::protobuf::Int64Value::MergeFrom(from.count());
  }
  if (from.has_sum()) {
    mutable_sum()->::google::protobuf::DoubleValue::MergeFrom(from.sum());
  }
}

void SummaryValue_Snapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryValue_Snapshot::CopyFrom(const SummaryValue_Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryValue_Snapshot::IsInitialized() const {
  return true;
}

void SummaryValue_Snapshot::Swap(SummaryValue_Snapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SummaryValue_Snapshot::InternalSwap(SummaryValue_Snapshot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&percentile_values_)->InternalSwap(CastToBase(&other->percentile_values_));
  swap(count_, other->count_);
  swap(sum_, other->sum_);
}

::google::protobuf::Metadata SummaryValue_Snapshot::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SummaryValue::InitAsDefaultInstance() {
  ::opencensus::proto::metrics::v1::_SummaryValue_default_instance_._instance.get_mutable()->count_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::opencensus::proto::metrics::v1::_SummaryValue_default_instance_._instance.get_mutable()->sum_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::opencensus::proto::metrics::v1::_SummaryValue_default_instance_._instance.get_mutable()->snapshot_ = const_cast< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot*>(
      ::opencensus::proto::metrics::v1::SummaryValue_Snapshot::internal_default_instance());
}
class SummaryValue::HasBitSetters {
 public:
  static const ::google::protobuf::Int64Value& count(const SummaryValue* msg);
  static const ::google::protobuf::DoubleValue& sum(const SummaryValue* msg);
  static const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot& snapshot(const SummaryValue* msg);
};

const ::google::protobuf::Int64Value&
SummaryValue::HasBitSetters::count(const SummaryValue* msg) {
  return *msg->count_;
}
const ::google::protobuf::DoubleValue&
SummaryValue::HasBitSetters::sum(const SummaryValue* msg) {
  return *msg->sum_;
}
const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot&
SummaryValue::HasBitSetters::snapshot(const SummaryValue* msg) {
  return *msg->snapshot_;
}
void SummaryValue::clear_count() {
  if (GetArenaNoVirtual() == nullptr && count_ != nullptr) {
    delete count_;
  }
  count_ = nullptr;
}
void SummaryValue::clear_sum() {
  if (GetArenaNoVirtual() == nullptr && sum_ != nullptr) {
    delete sum_;
  }
  sum_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SummaryValue::kCountFieldNumber;
const int SummaryValue::kSumFieldNumber;
const int SummaryValue::kSnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SummaryValue::SummaryValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opencensus.proto.metrics.v1.SummaryValue)
}
SummaryValue::SummaryValue(const SummaryValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_count()) {
    count_ = new ::google::protobuf::Int64Value(*from.count_);
  } else {
    count_ = nullptr;
  }
  if (from.has_sum()) {
    sum_ = new ::google::protobuf::DoubleValue(*from.sum_);
  } else {
    sum_ = nullptr;
  }
  if (from.has_snapshot()) {
    snapshot_ = new ::opencensus::proto::metrics::v1::SummaryValue_Snapshot(*from.snapshot_);
  } else {
    snapshot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opencensus.proto.metrics.v1.SummaryValue)
}

void SummaryValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snapshot_) -
      reinterpret_cast<char*>(&count_)) + sizeof(snapshot_));
}

SummaryValue::~SummaryValue() {
  // @@protoc_insertion_point(destructor:opencensus.proto.metrics.v1.SummaryValue)
  SharedDtor();
}

void SummaryValue::SharedDtor() {
  if (this != internal_default_instance()) delete count_;
  if (this != internal_default_instance()) delete sum_;
  if (this != internal_default_instance()) delete snapshot_;
}

void SummaryValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryValue& SummaryValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SummaryValue_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryValue::Clear() {
// @@protoc_insertion_point(message_clear_start:opencensus.proto.metrics.v1.SummaryValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && count_ != nullptr) {
    delete count_;
  }
  count_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sum_ != nullptr) {
    delete sum_;
  }
  sum_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && snapshot_ != nullptr) {
    delete snapshot_;
  }
  snapshot_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SummaryValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SummaryValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Int64Value count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int64Value::_InternalParse;
        object = msg->mutable_count();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.DoubleValue sum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::DoubleValue::_InternalParse;
        object = msg->mutable_sum();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opencensus::proto::metrics::v1::SummaryValue_Snapshot::_InternalParse;
        object = msg->mutable_snapshot();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SummaryValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opencensus.proto.metrics.v1.SummaryValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue sum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opencensus.proto.metrics.v1.SummaryValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opencensus.proto.metrics.v1.SummaryValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SummaryValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opencensus.proto.metrics.v1.SummaryValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::count(this), output);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::sum(this), output);
  }

  // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
  if (this->has_snapshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::snapshot(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opencensus.proto.metrics.v1.SummaryValue)
}

::google::protobuf::uint8* SummaryValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opencensus.proto.metrics.v1.SummaryValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::count(this), target);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::sum(this), target);
  }

  // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
  if (this->has_snapshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::snapshot(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opencensus.proto.metrics.v1.SummaryValue)
  return target;
}

size_t SummaryValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opencensus.proto.metrics.v1.SummaryValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value count = 1;
  if (this->has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *count_);
  }

  // .google.protobuf.DoubleValue sum = 2;
  if (this->has_sum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sum_);
  }

  // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
  if (this->has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *snapshot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opencensus.proto.metrics.v1.SummaryValue)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryValue* source =
      ::google::protobuf::DynamicCastToGenerated<SummaryValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opencensus.proto.metrics.v1.SummaryValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opencensus.proto.metrics.v1.SummaryValue)
    MergeFrom(*source);
  }
}

void SummaryValue::MergeFrom(const SummaryValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opencensus.proto.metrics.v1.SummaryValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count()) {
    mutable_count()->::google::protobuf::Int64Value::MergeFrom(from.count());
  }
  if (from.has_sum()) {
    mutable_sum()->::google::protobuf::DoubleValue::MergeFrom(from.sum());
  }
  if (from.has_snapshot()) {
    mutable_snapshot()->::opencensus::proto::metrics::v1::SummaryValue_Snapshot::MergeFrom(from.snapshot());
  }
}

void SummaryValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opencensus.proto.metrics.v1.SummaryValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryValue::CopyFrom(const SummaryValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opencensus.proto.metrics.v1.SummaryValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryValue::IsInitialized() const {
  return true;
}

void SummaryValue::Swap(SummaryValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SummaryValue::InternalSwap(SummaryValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(count_, other->count_);
  swap(sum_, other->sum_);
  swap(snapshot_, other->snapshot_);
}

::google::protobuf::Metadata SummaryValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto);
  return ::file_level_metadata_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace metrics
}  // namespace proto
}  // namespace opencensus
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::Metric* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::Metric >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::Metric >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::MetricDescriptor* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::MetricDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::MetricDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::LabelKey* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::LabelKey >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::LabelKey >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::TimeSeries* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::TimeSeries >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::TimeSeries >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::LabelValue* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::LabelValue >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::LabelValue >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::Point* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::Point >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::Point >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue_Bucket* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_Exemplar >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue_Exemplar >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::DistributionValue* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::DistributionValue >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot >(arena);
}
template<> PROTOBUF_NOINLINE ::opencensus::proto::metrics::v1::SummaryValue* Arena::CreateMaybeMessage< ::opencensus::proto::metrics::v1::SummaryValue >(Arena* arena) {
  return Arena::CreateInternal< ::opencensus::proto::metrics::v1::SummaryValue >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
