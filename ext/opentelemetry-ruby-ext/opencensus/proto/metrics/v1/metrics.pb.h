// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/metrics/v1/metrics.proto

#ifndef PROTOBUF_INCLUDED_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto
#define PROTOBUF_INCLUDED_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "opencensus/proto/resource/v1/resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[15]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto();
namespace opencensus {
namespace proto {
namespace metrics {
namespace v1 {
class DistributionValue;
class DistributionValueDefaultTypeInternal;
extern DistributionValueDefaultTypeInternal _DistributionValue_default_instance_;
class DistributionValue_Bucket;
class DistributionValue_BucketDefaultTypeInternal;
extern DistributionValue_BucketDefaultTypeInternal _DistributionValue_Bucket_default_instance_;
class DistributionValue_BucketOptions;
class DistributionValue_BucketOptionsDefaultTypeInternal;
extern DistributionValue_BucketOptionsDefaultTypeInternal _DistributionValue_BucketOptions_default_instance_;
class DistributionValue_BucketOptions_Explicit;
class DistributionValue_BucketOptions_ExplicitDefaultTypeInternal;
extern DistributionValue_BucketOptions_ExplicitDefaultTypeInternal _DistributionValue_BucketOptions_Explicit_default_instance_;
class DistributionValue_Exemplar;
class DistributionValue_ExemplarDefaultTypeInternal;
extern DistributionValue_ExemplarDefaultTypeInternal _DistributionValue_Exemplar_default_instance_;
class DistributionValue_Exemplar_AttachmentsEntry_DoNotUse;
class DistributionValue_Exemplar_AttachmentsEntry_DoNotUseDefaultTypeInternal;
extern DistributionValue_Exemplar_AttachmentsEntry_DoNotUseDefaultTypeInternal _DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_default_instance_;
class LabelKey;
class LabelKeyDefaultTypeInternal;
extern LabelKeyDefaultTypeInternal _LabelKey_default_instance_;
class LabelValue;
class LabelValueDefaultTypeInternal;
extern LabelValueDefaultTypeInternal _LabelValue_default_instance_;
class Metric;
class MetricDefaultTypeInternal;
extern MetricDefaultTypeInternal _Metric_default_instance_;
class MetricDescriptor;
class MetricDescriptorDefaultTypeInternal;
extern MetricDescriptorDefaultTypeInternal _MetricDescriptor_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class SummaryValue;
class SummaryValueDefaultTypeInternal;
extern SummaryValueDefaultTypeInternal _SummaryValue_default_instance_;
class SummaryValue_Snapshot;
class SummaryValue_SnapshotDefaultTypeInternal;
extern SummaryValue_SnapshotDefaultTypeInternal _SummaryValue_Snapshot_default_instance_;
class SummaryValue_Snapshot_ValueAtPercentile;
class SummaryValue_Snapshot_ValueAtPercentileDefaultTypeInternal;
extern SummaryValue_Snapshot_ValueAtPercentileDefaultTypeInternal _SummaryValue_Snapshot_ValueAtPercentile_default_instance_;
class TimeSeries;
class TimeSeriesDefaultTypeInternal;
extern TimeSeriesDefaultTypeInternal _TimeSeries_default_instance_;
}  // namespace v1
}  // namespace metrics
}  // namespace proto
}  // namespace opencensus
namespace google {
namespace protobuf {
template<> ::opencensus::proto::metrics::v1::DistributionValue* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue>(Arena*);
template<> ::opencensus::proto::metrics::v1::DistributionValue_Bucket* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_Bucket>(Arena*);
template<> ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_BucketOptions>(Arena*);
template<> ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit>(Arena*);
template<> ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_Exemplar>(Arena*);
template<> ::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_Exemplar_AttachmentsEntry_DoNotUse>(Arena*);
template<> ::opencensus::proto::metrics::v1::LabelKey* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::LabelKey>(Arena*);
template<> ::opencensus::proto::metrics::v1::LabelValue* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::LabelValue>(Arena*);
template<> ::opencensus::proto::metrics::v1::Metric* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::Metric>(Arena*);
template<> ::opencensus::proto::metrics::v1::MetricDescriptor* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::MetricDescriptor>(Arena*);
template<> ::opencensus::proto::metrics::v1::Point* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::Point>(Arena*);
template<> ::opencensus::proto::metrics::v1::SummaryValue* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::SummaryValue>(Arena*);
template<> ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::SummaryValue_Snapshot>(Arena*);
template<> ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile>(Arena*);
template<> ::opencensus::proto::metrics::v1::TimeSeries* Arena::CreateMaybeMessage<::opencensus::proto::metrics::v1::TimeSeries>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace opencensus {
namespace proto {
namespace metrics {
namespace v1 {

enum MetricDescriptor_Type {
  MetricDescriptor_Type_UNSPECIFIED = 0,
  MetricDescriptor_Type_GAUGE_INT64 = 1,
  MetricDescriptor_Type_GAUGE_DOUBLE = 2,
  MetricDescriptor_Type_GAUGE_DISTRIBUTION = 3,
  MetricDescriptor_Type_CUMULATIVE_INT64 = 4,
  MetricDescriptor_Type_CUMULATIVE_DOUBLE = 5,
  MetricDescriptor_Type_CUMULATIVE_DISTRIBUTION = 6,
  MetricDescriptor_Type_SUMMARY = 7,
  MetricDescriptor_Type_MetricDescriptor_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MetricDescriptor_Type_MetricDescriptor_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MetricDescriptor_Type_IsValid(int value);
const MetricDescriptor_Type MetricDescriptor_Type_Type_MIN = MetricDescriptor_Type_UNSPECIFIED;
const MetricDescriptor_Type MetricDescriptor_Type_Type_MAX = MetricDescriptor_Type_SUMMARY;
const int MetricDescriptor_Type_Type_ARRAYSIZE = MetricDescriptor_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MetricDescriptor_Type_descriptor();
inline const ::std::string& MetricDescriptor_Type_Name(MetricDescriptor_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MetricDescriptor_Type_descriptor(), value);
}
inline bool MetricDescriptor_Type_Parse(
    const ::std::string& name, MetricDescriptor_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MetricDescriptor_Type>(
    MetricDescriptor_Type_descriptor(), name, value);
}
// ===================================================================

class Metric :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.Metric) */ {
 public:
  Metric();
  virtual ~Metric();

  Metric(const Metric& from);

  inline Metric& operator=(const Metric& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Metric(Metric&& from) noexcept
    : Metric() {
    *this = ::std::move(from);
  }

  inline Metric& operator=(Metric&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Metric& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metric* internal_default_instance() {
    return reinterpret_cast<const Metric*>(
               &_Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Metric* other);
  friend void swap(Metric& a, Metric& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Metric* New() const final {
    return CreateMaybeMessage<Metric>(nullptr);
  }

  Metric* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Metric>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Metric& from);
  void MergeFrom(const Metric& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metric* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
  int timeseries_size() const;
  void clear_timeseries();
  static const int kTimeseriesFieldNumber = 2;
  ::opencensus::proto::metrics::v1::TimeSeries* mutable_timeseries(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::TimeSeries >*
      mutable_timeseries();
  const ::opencensus::proto::metrics::v1::TimeSeries& timeseries(int index) const;
  ::opencensus::proto::metrics::v1::TimeSeries* add_timeseries();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::TimeSeries >&
      timeseries() const;

  // .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
  bool has_metric_descriptor() const;
  void clear_metric_descriptor();
  static const int kMetricDescriptorFieldNumber = 1;
  const ::opencensus::proto::metrics::v1::MetricDescriptor& metric_descriptor() const;
  ::opencensus::proto::metrics::v1::MetricDescriptor* release_metric_descriptor();
  ::opencensus::proto::metrics::v1::MetricDescriptor* mutable_metric_descriptor();
  void set_allocated_metric_descriptor(::opencensus::proto::metrics::v1::MetricDescriptor* metric_descriptor);

  // .opencensus.proto.resource.v1.Resource resource = 3;
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 3;
  const ::opencensus::proto::resource::v1::Resource& resource() const;
  ::opencensus::proto::resource::v1::Resource* release_resource();
  ::opencensus::proto::resource::v1::Resource* mutable_resource();
  void set_allocated_resource(::opencensus::proto::resource::v1::Resource* resource);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.Metric)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::TimeSeries > timeseries_;
  ::opencensus::proto::metrics::v1::MetricDescriptor* metric_descriptor_;
  ::opencensus::proto::resource::v1::Resource* resource_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class MetricDescriptor :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.MetricDescriptor) */ {
 public:
  MetricDescriptor();
  virtual ~MetricDescriptor();

  MetricDescriptor(const MetricDescriptor& from);

  inline MetricDescriptor& operator=(const MetricDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MetricDescriptor(MetricDescriptor&& from) noexcept
    : MetricDescriptor() {
    *this = ::std::move(from);
  }

  inline MetricDescriptor& operator=(MetricDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MetricDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MetricDescriptor* internal_default_instance() {
    return reinterpret_cast<const MetricDescriptor*>(
               &_MetricDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MetricDescriptor* other);
  friend void swap(MetricDescriptor& a, MetricDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MetricDescriptor* New() const final {
    return CreateMaybeMessage<MetricDescriptor>(nullptr);
  }

  MetricDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MetricDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MetricDescriptor& from);
  void MergeFrom(const MetricDescriptor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MetricDescriptor_Type Type;
  static const Type UNSPECIFIED =
    MetricDescriptor_Type_UNSPECIFIED;
  static const Type GAUGE_INT64 =
    MetricDescriptor_Type_GAUGE_INT64;
  static const Type GAUGE_DOUBLE =
    MetricDescriptor_Type_GAUGE_DOUBLE;
  static const Type GAUGE_DISTRIBUTION =
    MetricDescriptor_Type_GAUGE_DISTRIBUTION;
  static const Type CUMULATIVE_INT64 =
    MetricDescriptor_Type_CUMULATIVE_INT64;
  static const Type CUMULATIVE_DOUBLE =
    MetricDescriptor_Type_CUMULATIVE_DOUBLE;
  static const Type CUMULATIVE_DISTRIBUTION =
    MetricDescriptor_Type_CUMULATIVE_DISTRIBUTION;
  static const Type SUMMARY =
    MetricDescriptor_Type_SUMMARY;
  static inline bool Type_IsValid(int value) {
    return MetricDescriptor_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MetricDescriptor_Type_Type_MIN;
  static const Type Type_MAX =
    MetricDescriptor_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MetricDescriptor_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MetricDescriptor_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MetricDescriptor_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MetricDescriptor_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
  int label_keys_size() const;
  void clear_label_keys();
  static const int kLabelKeysFieldNumber = 5;
  ::opencensus::proto::metrics::v1::LabelKey* mutable_label_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelKey >*
      mutable_label_keys();
  const ::opencensus::proto::metrics::v1::LabelKey& label_keys(int index) const;
  ::opencensus::proto::metrics::v1::LabelKey* add_label_keys();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelKey >&
      label_keys() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string unit = 3;
  void clear_unit();
  static const int kUnitFieldNumber = 3;
  const ::std::string& unit() const;
  void set_unit(const ::std::string& value);
  #if LANG_CXX11
  void set_unit(::std::string&& value);
  #endif
  void set_unit(const char* value);
  void set_unit(const char* value, size_t size);
  ::std::string* mutable_unit();
  ::std::string* release_unit();
  void set_allocated_unit(::std::string* unit);

  // .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::opencensus::proto::metrics::v1::MetricDescriptor_Type type() const;
  void set_type(::opencensus::proto::metrics::v1::MetricDescriptor_Type value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.MetricDescriptor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelKey > label_keys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr unit_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class LabelKey :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.LabelKey) */ {
 public:
  LabelKey();
  virtual ~LabelKey();

  LabelKey(const LabelKey& from);

  inline LabelKey& operator=(const LabelKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelKey(LabelKey&& from) noexcept
    : LabelKey() {
    *this = ::std::move(from);
  }

  inline LabelKey& operator=(LabelKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LabelKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelKey* internal_default_instance() {
    return reinterpret_cast<const LabelKey*>(
               &_LabelKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LabelKey* other);
  friend void swap(LabelKey& a, LabelKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelKey* New() const final {
    return CreateMaybeMessage<LabelKey>(nullptr);
  }

  LabelKey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LabelKey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LabelKey& from);
  void MergeFrom(const LabelKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabelKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.LabelKey)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class TimeSeries :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.TimeSeries) */ {
 public:
  TimeSeries();
  virtual ~TimeSeries();

  TimeSeries(const TimeSeries& from);

  inline TimeSeries& operator=(const TimeSeries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeSeries(TimeSeries&& from) noexcept
    : TimeSeries() {
    *this = ::std::move(from);
  }

  inline TimeSeries& operator=(TimeSeries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TimeSeries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeSeries* internal_default_instance() {
    return reinterpret_cast<const TimeSeries*>(
               &_TimeSeries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TimeSeries* other);
  friend void swap(TimeSeries& a, TimeSeries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeSeries* New() const final {
    return CreateMaybeMessage<TimeSeries>(nullptr);
  }

  TimeSeries* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TimeSeries>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TimeSeries& from);
  void MergeFrom(const TimeSeries& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeSeries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
  int label_values_size() const;
  void clear_label_values();
  static const int kLabelValuesFieldNumber = 2;
  ::opencensus::proto::metrics::v1::LabelValue* mutable_label_values(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelValue >*
      mutable_label_values();
  const ::opencensus::proto::metrics::v1::LabelValue& label_values(int index) const;
  ::opencensus::proto::metrics::v1::LabelValue* add_label_values();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelValue >&
      label_values() const;

  // repeated .opencensus.proto.metrics.v1.Point points = 3;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::opencensus::proto::metrics::v1::Point* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::Point >*
      mutable_points();
  const ::opencensus::proto::metrics::v1::Point& points(int index) const;
  ::opencensus::proto::metrics::v1::Point* add_points();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::Point >&
      points() const;

  // .google.protobuf.Timestamp start_timestamp = 1;
  bool has_start_timestamp() const;
  void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 1;
  const ::google::protobuf::Timestamp& start_timestamp() const;
  ::google::protobuf::Timestamp* release_start_timestamp();
  ::google::protobuf::Timestamp* mutable_start_timestamp();
  void set_allocated_start_timestamp(::google::protobuf::Timestamp* start_timestamp);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.TimeSeries)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelValue > label_values_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::Point > points_;
  ::google::protobuf::Timestamp* start_timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class LabelValue :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.LabelValue) */ {
 public:
  LabelValue();
  virtual ~LabelValue();

  LabelValue(const LabelValue& from);

  inline LabelValue& operator=(const LabelValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabelValue(LabelValue&& from) noexcept
    : LabelValue() {
    *this = ::std::move(from);
  }

  inline LabelValue& operator=(LabelValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LabelValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabelValue* internal_default_instance() {
    return reinterpret_cast<const LabelValue*>(
               &_LabelValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(LabelValue* other);
  friend void swap(LabelValue& a, LabelValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabelValue* New() const final {
    return CreateMaybeMessage<LabelValue>(nullptr);
  }

  LabelValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LabelValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LabelValue& from);
  void MergeFrom(const LabelValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabelValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // bool has_value = 2;
  void clear_has_value();
  static const int kHasValueFieldNumber = 2;
  bool has_value() const;
  void set_has_value(bool value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.LabelValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  bool has_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class Point :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Point& default_instance();

  enum ValueCase {
    kInt64Value = 2,
    kDoubleValue = 3,
    kDistributionValue = 4,
    kSummaryValue = 5,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Point* other);
  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(nullptr);
  }

  Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // int64 int64_value = 2;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 2;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // double double_value = 3;
  private:
  bool has_double_value() const;
  public:
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 3;
  double double_value() const;
  void set_double_value(double value);

  // .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
  bool has_distribution_value() const;
  void clear_distribution_value();
  static const int kDistributionValueFieldNumber = 4;
  const ::opencensus::proto::metrics::v1::DistributionValue& distribution_value() const;
  ::opencensus::proto::metrics::v1::DistributionValue* release_distribution_value();
  ::opencensus::proto::metrics::v1::DistributionValue* mutable_distribution_value();
  void set_allocated_distribution_value(::opencensus::proto::metrics::v1::DistributionValue* distribution_value);

  // .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
  bool has_summary_value() const;
  void clear_summary_value();
  static const int kSummaryValueFieldNumber = 5;
  const ::opencensus::proto::metrics::v1::SummaryValue& summary_value() const;
  ::opencensus::proto::metrics::v1::SummaryValue* release_summary_value();
  ::opencensus::proto::metrics::v1::SummaryValue* mutable_summary_value();
  void set_allocated_summary_value(::opencensus::proto::metrics::v1::SummaryValue* summary_value);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.Point)
 private:
  class HasBitSetters;
  void set_has_int64_value();
  void set_has_double_value();
  void set_has_distribution_value();
  void set_has_summary_value();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* timestamp_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 int64_value_;
    double double_value_;
    ::opencensus::proto::metrics::v1::DistributionValue* distribution_value_;
    ::opencensus::proto::metrics::v1::SummaryValue* summary_value_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class DistributionValue_BucketOptions_Explicit :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit) */ {
 public:
  DistributionValue_BucketOptions_Explicit();
  virtual ~DistributionValue_BucketOptions_Explicit();

  DistributionValue_BucketOptions_Explicit(const DistributionValue_BucketOptions_Explicit& from);

  inline DistributionValue_BucketOptions_Explicit& operator=(const DistributionValue_BucketOptions_Explicit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistributionValue_BucketOptions_Explicit(DistributionValue_BucketOptions_Explicit&& from) noexcept
    : DistributionValue_BucketOptions_Explicit() {
    *this = ::std::move(from);
  }

  inline DistributionValue_BucketOptions_Explicit& operator=(DistributionValue_BucketOptions_Explicit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DistributionValue_BucketOptions_Explicit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistributionValue_BucketOptions_Explicit* internal_default_instance() {
    return reinterpret_cast<const DistributionValue_BucketOptions_Explicit*>(
               &_DistributionValue_BucketOptions_Explicit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DistributionValue_BucketOptions_Explicit* other);
  friend void swap(DistributionValue_BucketOptions_Explicit& a, DistributionValue_BucketOptions_Explicit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistributionValue_BucketOptions_Explicit* New() const final {
    return CreateMaybeMessage<DistributionValue_BucketOptions_Explicit>(nullptr);
  }

  DistributionValue_BucketOptions_Explicit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DistributionValue_BucketOptions_Explicit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DistributionValue_BucketOptions_Explicit& from);
  void MergeFrom(const DistributionValue_BucketOptions_Explicit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistributionValue_BucketOptions_Explicit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double bounds = 1;
  int bounds_size() const;
  void clear_bounds();
  static const int kBoundsFieldNumber = 1;
  double bounds(int index) const;
  void set_bounds(int index, double value);
  void add_bounds(double value);
  const ::google::protobuf::RepeatedField< double >&
      bounds() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_bounds();

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > bounds_;
  mutable std::atomic<int> _bounds_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class DistributionValue_BucketOptions :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.DistributionValue.BucketOptions) */ {
 public:
  DistributionValue_BucketOptions();
  virtual ~DistributionValue_BucketOptions();

  DistributionValue_BucketOptions(const DistributionValue_BucketOptions& from);

  inline DistributionValue_BucketOptions& operator=(const DistributionValue_BucketOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistributionValue_BucketOptions(DistributionValue_BucketOptions&& from) noexcept
    : DistributionValue_BucketOptions() {
    *this = ::std::move(from);
  }

  inline DistributionValue_BucketOptions& operator=(DistributionValue_BucketOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DistributionValue_BucketOptions& default_instance();

  enum TypeCase {
    kExplicit = 1,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistributionValue_BucketOptions* internal_default_instance() {
    return reinterpret_cast<const DistributionValue_BucketOptions*>(
               &_DistributionValue_BucketOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DistributionValue_BucketOptions* other);
  friend void swap(DistributionValue_BucketOptions& a, DistributionValue_BucketOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistributionValue_BucketOptions* New() const final {
    return CreateMaybeMessage<DistributionValue_BucketOptions>(nullptr);
  }

  DistributionValue_BucketOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DistributionValue_BucketOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DistributionValue_BucketOptions& from);
  void MergeFrom(const DistributionValue_BucketOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistributionValue_BucketOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DistributionValue_BucketOptions_Explicit Explicit;

  // accessors -------------------------------------------------------

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
  bool has_explicit_() const;
  void clear_explicit_();
  static const int kExplicitFieldNumber = 1;
  const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit& explicit_() const;
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* release_explicit_();
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* mutable_explicit_();
  void set_allocated_explicit_(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* explicit_);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.DistributionValue.BucketOptions)
 private:
  class HasBitSetters;
  void set_has_explicit_();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* explicit__;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class DistributionValue_Bucket :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.DistributionValue.Bucket) */ {
 public:
  DistributionValue_Bucket();
  virtual ~DistributionValue_Bucket();

  DistributionValue_Bucket(const DistributionValue_Bucket& from);

  inline DistributionValue_Bucket& operator=(const DistributionValue_Bucket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistributionValue_Bucket(DistributionValue_Bucket&& from) noexcept
    : DistributionValue_Bucket() {
    *this = ::std::move(from);
  }

  inline DistributionValue_Bucket& operator=(DistributionValue_Bucket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DistributionValue_Bucket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistributionValue_Bucket* internal_default_instance() {
    return reinterpret_cast<const DistributionValue_Bucket*>(
               &_DistributionValue_Bucket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DistributionValue_Bucket* other);
  friend void swap(DistributionValue_Bucket& a, DistributionValue_Bucket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistributionValue_Bucket* New() const final {
    return CreateMaybeMessage<DistributionValue_Bucket>(nullptr);
  }

  DistributionValue_Bucket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DistributionValue_Bucket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DistributionValue_Bucket& from);
  void MergeFrom(const DistributionValue_Bucket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistributionValue_Bucket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
  bool has_exemplar() const;
  void clear_exemplar();
  static const int kExemplarFieldNumber = 2;
  const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar& exemplar() const;
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* release_exemplar();
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* mutable_exemplar();
  void set_allocated_exemplar(::opencensus::proto::metrics::v1::DistributionValue_Exemplar* exemplar);

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.DistributionValue.Bucket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* exemplar_;
  ::google::protobuf::int64 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class DistributionValue_Exemplar_AttachmentsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<DistributionValue_Exemplar_AttachmentsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DistributionValue_Exemplar_AttachmentsEntry_DoNotUse();
  DistributionValue_Exemplar_AttachmentsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DistributionValue_Exemplar_AttachmentsEntry_DoNotUse& other);
  static const DistributionValue_Exemplar_AttachmentsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DistributionValue_Exemplar_AttachmentsEntry_DoNotUse*>(&_DistributionValue_Exemplar_AttachmentsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DistributionValue_Exemplar :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.DistributionValue.Exemplar) */ {
 public:
  DistributionValue_Exemplar();
  virtual ~DistributionValue_Exemplar();

  DistributionValue_Exemplar(const DistributionValue_Exemplar& from);

  inline DistributionValue_Exemplar& operator=(const DistributionValue_Exemplar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistributionValue_Exemplar(DistributionValue_Exemplar&& from) noexcept
    : DistributionValue_Exemplar() {
    *this = ::std::move(from);
  }

  inline DistributionValue_Exemplar& operator=(DistributionValue_Exemplar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DistributionValue_Exemplar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistributionValue_Exemplar* internal_default_instance() {
    return reinterpret_cast<const DistributionValue_Exemplar*>(
               &_DistributionValue_Exemplar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DistributionValue_Exemplar* other);
  friend void swap(DistributionValue_Exemplar& a, DistributionValue_Exemplar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistributionValue_Exemplar* New() const final {
    return CreateMaybeMessage<DistributionValue_Exemplar>(nullptr);
  }

  DistributionValue_Exemplar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DistributionValue_Exemplar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DistributionValue_Exemplar& from);
  void MergeFrom(const DistributionValue_Exemplar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistributionValue_Exemplar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> attachments = 3;
  int attachments_size() const;
  void clear_attachments();
  static const int kAttachmentsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      attachments() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_attachments();

  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.DistributionValue.Exemplar)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DistributionValue_Exemplar_AttachmentsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > attachments_;
  ::google::protobuf::Timestamp* timestamp_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class DistributionValue :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.DistributionValue) */ {
 public:
  DistributionValue();
  virtual ~DistributionValue();

  DistributionValue(const DistributionValue& from);

  inline DistributionValue& operator=(const DistributionValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DistributionValue(DistributionValue&& from) noexcept
    : DistributionValue() {
    *this = ::std::move(from);
  }

  inline DistributionValue& operator=(DistributionValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DistributionValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DistributionValue* internal_default_instance() {
    return reinterpret_cast<const DistributionValue*>(
               &_DistributionValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DistributionValue* other);
  friend void swap(DistributionValue& a, DistributionValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DistributionValue* New() const final {
    return CreateMaybeMessage<DistributionValue>(nullptr);
  }

  DistributionValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DistributionValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DistributionValue& from);
  void MergeFrom(const DistributionValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DistributionValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DistributionValue_BucketOptions BucketOptions;
  typedef DistributionValue_Bucket Bucket;
  typedef DistributionValue_Exemplar Exemplar;

  // accessors -------------------------------------------------------

  // repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
  int buckets_size() const;
  void clear_buckets();
  static const int kBucketsFieldNumber = 5;
  ::opencensus::proto::metrics::v1::DistributionValue_Bucket* mutable_buckets(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >*
      mutable_buckets();
  const ::opencensus::proto::metrics::v1::DistributionValue_Bucket& buckets(int index) const;
  ::opencensus::proto::metrics::v1::DistributionValue_Bucket* add_buckets();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >&
      buckets() const;

  // .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
  bool has_bucket_options() const;
  void clear_bucket_options();
  static const int kBucketOptionsFieldNumber = 4;
  const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions& bucket_options() const;
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* release_bucket_options();
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* mutable_bucket_options();
  void set_allocated_bucket_options(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* bucket_options);

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // double sum = 2;
  void clear_sum();
  static const int kSumFieldNumber = 2;
  double sum() const;
  void set_sum(double value);

  // double sum_of_squared_deviation = 3;
  void clear_sum_of_squared_deviation();
  static const int kSumOfSquaredDeviationFieldNumber = 3;
  double sum_of_squared_deviation() const;
  void set_sum_of_squared_deviation(double value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.DistributionValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::DistributionValue_Bucket > buckets_;
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* bucket_options_;
  ::google::protobuf::int64 count_;
  double sum_;
  double sum_of_squared_deviation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class SummaryValue_Snapshot_ValueAtPercentile :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile) */ {
 public:
  SummaryValue_Snapshot_ValueAtPercentile();
  virtual ~SummaryValue_Snapshot_ValueAtPercentile();

  SummaryValue_Snapshot_ValueAtPercentile(const SummaryValue_Snapshot_ValueAtPercentile& from);

  inline SummaryValue_Snapshot_ValueAtPercentile& operator=(const SummaryValue_Snapshot_ValueAtPercentile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SummaryValue_Snapshot_ValueAtPercentile(SummaryValue_Snapshot_ValueAtPercentile&& from) noexcept
    : SummaryValue_Snapshot_ValueAtPercentile() {
    *this = ::std::move(from);
  }

  inline SummaryValue_Snapshot_ValueAtPercentile& operator=(SummaryValue_Snapshot_ValueAtPercentile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SummaryValue_Snapshot_ValueAtPercentile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SummaryValue_Snapshot_ValueAtPercentile* internal_default_instance() {
    return reinterpret_cast<const SummaryValue_Snapshot_ValueAtPercentile*>(
               &_SummaryValue_Snapshot_ValueAtPercentile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SummaryValue_Snapshot_ValueAtPercentile* other);
  friend void swap(SummaryValue_Snapshot_ValueAtPercentile& a, SummaryValue_Snapshot_ValueAtPercentile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SummaryValue_Snapshot_ValueAtPercentile* New() const final {
    return CreateMaybeMessage<SummaryValue_Snapshot_ValueAtPercentile>(nullptr);
  }

  SummaryValue_Snapshot_ValueAtPercentile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SummaryValue_Snapshot_ValueAtPercentile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SummaryValue_Snapshot_ValueAtPercentile& from);
  void MergeFrom(const SummaryValue_Snapshot_ValueAtPercentile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SummaryValue_Snapshot_ValueAtPercentile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double percentile = 1;
  void clear_percentile();
  static const int kPercentileFieldNumber = 1;
  double percentile() const;
  void set_percentile(double value);

  // double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double percentile_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class SummaryValue_Snapshot :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.SummaryValue.Snapshot) */ {
 public:
  SummaryValue_Snapshot();
  virtual ~SummaryValue_Snapshot();

  SummaryValue_Snapshot(const SummaryValue_Snapshot& from);

  inline SummaryValue_Snapshot& operator=(const SummaryValue_Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SummaryValue_Snapshot(SummaryValue_Snapshot&& from) noexcept
    : SummaryValue_Snapshot() {
    *this = ::std::move(from);
  }

  inline SummaryValue_Snapshot& operator=(SummaryValue_Snapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SummaryValue_Snapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SummaryValue_Snapshot* internal_default_instance() {
    return reinterpret_cast<const SummaryValue_Snapshot*>(
               &_SummaryValue_Snapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SummaryValue_Snapshot* other);
  friend void swap(SummaryValue_Snapshot& a, SummaryValue_Snapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SummaryValue_Snapshot* New() const final {
    return CreateMaybeMessage<SummaryValue_Snapshot>(nullptr);
  }

  SummaryValue_Snapshot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SummaryValue_Snapshot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SummaryValue_Snapshot& from);
  void MergeFrom(const SummaryValue_Snapshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SummaryValue_Snapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SummaryValue_Snapshot_ValueAtPercentile ValueAtPercentile;

  // accessors -------------------------------------------------------

  // repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
  int percentile_values_size() const;
  void clear_percentile_values();
  static const int kPercentileValuesFieldNumber = 3;
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* mutable_percentile_values(int index);
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >*
      mutable_percentile_values();
  const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile& percentile_values(int index) const;
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* add_percentile_values();
  const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >&
      percentile_values() const;

  // .google.protobuf.Int64Value count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  const ::google::protobuf::Int64Value& count() const;
  ::google::protobuf::Int64Value* release_count();
  ::google::protobuf::Int64Value* mutable_count();
  void set_allocated_count(::google::protobuf::Int64Value* count);

  // .google.protobuf.DoubleValue sum = 2;
  bool has_sum() const;
  void clear_sum();
  static const int kSumFieldNumber = 2;
  const ::google::protobuf::DoubleValue& sum() const;
  ::google::protobuf::DoubleValue* release_sum();
  ::google::protobuf::DoubleValue* mutable_sum();
  void set_allocated_sum(::google::protobuf::DoubleValue* sum);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.SummaryValue.Snapshot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile > percentile_values_;
  ::google::protobuf::Int64Value* count_;
  ::google::protobuf::DoubleValue* sum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// -------------------------------------------------------------------

class SummaryValue :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:opencensus.proto.metrics.v1.SummaryValue) */ {
 public:
  SummaryValue();
  virtual ~SummaryValue();

  SummaryValue(const SummaryValue& from);

  inline SummaryValue& operator=(const SummaryValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SummaryValue(SummaryValue&& from) noexcept
    : SummaryValue() {
    *this = ::std::move(from);
  }

  inline SummaryValue& operator=(SummaryValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SummaryValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SummaryValue* internal_default_instance() {
    return reinterpret_cast<const SummaryValue*>(
               &_SummaryValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SummaryValue* other);
  friend void swap(SummaryValue& a, SummaryValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SummaryValue* New() const final {
    return CreateMaybeMessage<SummaryValue>(nullptr);
  }

  SummaryValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SummaryValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SummaryValue& from);
  void MergeFrom(const SummaryValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SummaryValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SummaryValue_Snapshot Snapshot;

  // accessors -------------------------------------------------------

  // .google.protobuf.Int64Value count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  const ::google::protobuf::Int64Value& count() const;
  ::google::protobuf::Int64Value* release_count();
  ::google::protobuf::Int64Value* mutable_count();
  void set_allocated_count(::google::protobuf::Int64Value* count);

  // .google.protobuf.DoubleValue sum = 2;
  bool has_sum() const;
  void clear_sum();
  static const int kSumFieldNumber = 2;
  const ::google::protobuf::DoubleValue& sum() const;
  ::google::protobuf::DoubleValue* release_sum();
  ::google::protobuf::DoubleValue* mutable_sum();
  void set_allocated_sum(::google::protobuf::DoubleValue* sum);

  // .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
  bool has_snapshot() const;
  void clear_snapshot();
  static const int kSnapshotFieldNumber = 3;
  const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot& snapshot() const;
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* release_snapshot();
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* mutable_snapshot();
  void set_allocated_snapshot(::opencensus::proto::metrics::v1::SummaryValue_Snapshot* snapshot);

  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.SummaryValue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Int64Value* count_;
  ::google::protobuf::DoubleValue* sum_;
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* snapshot_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Metric

// .opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;
inline bool Metric::has_metric_descriptor() const {
  return this != internal_default_instance() && metric_descriptor_ != nullptr;
}
inline void Metric::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == nullptr && metric_descriptor_ != nullptr) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = nullptr;
}
inline const ::opencensus::proto::metrics::v1::MetricDescriptor& Metric::metric_descriptor() const {
  const ::opencensus::proto::metrics::v1::MetricDescriptor* p = metric_descriptor_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Metric.metric_descriptor)
  return p != nullptr ? *p : *reinterpret_cast<const ::opencensus::proto::metrics::v1::MetricDescriptor*>(
      &::opencensus::proto::metrics::v1::_MetricDescriptor_default_instance_);
}
inline ::opencensus::proto::metrics::v1::MetricDescriptor* Metric::release_metric_descriptor() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.Metric.metric_descriptor)
  
  ::opencensus::proto::metrics::v1::MetricDescriptor* temp = metric_descriptor_;
  metric_descriptor_ = nullptr;
  return temp;
}
inline ::opencensus::proto::metrics::v1::MetricDescriptor* Metric::mutable_metric_descriptor() {
  
  if (metric_descriptor_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencensus::proto::metrics::v1::MetricDescriptor>(GetArenaNoVirtual());
    metric_descriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Metric.metric_descriptor)
  return metric_descriptor_;
}
inline void Metric::set_allocated_metric_descriptor(::opencensus::proto::metrics::v1::MetricDescriptor* metric_descriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete metric_descriptor_;
  }
  if (metric_descriptor) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metric_descriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric_descriptor, submessage_arena);
    }
    
  } else {
    
  }
  metric_descriptor_ = metric_descriptor;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.Metric.metric_descriptor)
}

// repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;
inline int Metric::timeseries_size() const {
  return timeseries_.size();
}
inline void Metric::clear_timeseries() {
  timeseries_.Clear();
}
inline ::opencensus::proto::metrics::v1::TimeSeries* Metric::mutable_timeseries(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Metric.timeseries)
  return timeseries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::TimeSeries >*
Metric::mutable_timeseries() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.Metric.timeseries)
  return &timeseries_;
}
inline const ::opencensus::proto::metrics::v1::TimeSeries& Metric::timeseries(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Metric.timeseries)
  return timeseries_.Get(index);
}
inline ::opencensus::proto::metrics::v1::TimeSeries* Metric::add_timeseries() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.Metric.timeseries)
  return timeseries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::TimeSeries >&
Metric::timeseries() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.Metric.timeseries)
  return timeseries_;
}

// .opencensus.proto.resource.v1.Resource resource = 3;
inline bool Metric::has_resource() const {
  return this != internal_default_instance() && resource_ != nullptr;
}
inline const ::opencensus::proto::resource::v1::Resource& Metric::resource() const {
  const ::opencensus::proto::resource::v1::Resource* p = resource_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Metric.resource)
  return p != nullptr ? *p : *reinterpret_cast<const ::opencensus::proto::resource::v1::Resource*>(
      &::opencensus::proto::resource::v1::_Resource_default_instance_);
}
inline ::opencensus::proto::resource::v1::Resource* Metric::release_resource() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.Metric.resource)
  
  ::opencensus::proto::resource::v1::Resource* temp = resource_;
  resource_ = nullptr;
  return temp;
}
inline ::opencensus::proto::resource::v1::Resource* Metric::mutable_resource() {
  
  if (resource_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencensus::proto::resource::v1::Resource>(GetArenaNoVirtual());
    resource_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Metric.resource)
  return resource_;
}
inline void Metric::set_allocated_resource(::opencensus::proto::resource::v1::Resource* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resource_);
  }
  if (resource) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    
  } else {
    
  }
  resource_ = resource;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.Metric.resource)
}

// -------------------------------------------------------------------

// MetricDescriptor

// string name = 1;
inline void MetricDescriptor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetricDescriptor::name() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.MetricDescriptor.name)
  return name_.GetNoArena();
}
inline void MetricDescriptor::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.MetricDescriptor.name)
}
#if LANG_CXX11
inline void MetricDescriptor::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.MetricDescriptor.name)
}
#endif
inline void MetricDescriptor::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.MetricDescriptor.name)
}
inline void MetricDescriptor::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.MetricDescriptor.name)
}
inline ::std::string* MetricDescriptor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.MetricDescriptor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetricDescriptor::release_name() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.MetricDescriptor.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetricDescriptor::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.MetricDescriptor.name)
}

// string description = 2;
inline void MetricDescriptor::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetricDescriptor::description() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.MetricDescriptor.description)
  return description_.GetNoArena();
}
inline void MetricDescriptor::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.MetricDescriptor.description)
}
#if LANG_CXX11
inline void MetricDescriptor::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.MetricDescriptor.description)
}
#endif
inline void MetricDescriptor::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.MetricDescriptor.description)
}
inline void MetricDescriptor::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.MetricDescriptor.description)
}
inline ::std::string* MetricDescriptor::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.MetricDescriptor.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetricDescriptor::release_description() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.MetricDescriptor.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetricDescriptor::set_allocated_description(::std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.MetricDescriptor.description)
}

// string unit = 3;
inline void MetricDescriptor::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetricDescriptor::unit() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.MetricDescriptor.unit)
  return unit_.GetNoArena();
}
inline void MetricDescriptor::set_unit(const ::std::string& value) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.MetricDescriptor.unit)
}
#if LANG_CXX11
inline void MetricDescriptor::set_unit(::std::string&& value) {
  
  unit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.MetricDescriptor.unit)
}
#endif
inline void MetricDescriptor::set_unit(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.MetricDescriptor.unit)
}
inline void MetricDescriptor::set_unit(const char* value, size_t size) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.MetricDescriptor.unit)
}
inline ::std::string* MetricDescriptor::mutable_unit() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.MetricDescriptor.unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetricDescriptor::release_unit() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.MetricDescriptor.unit)
  
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetricDescriptor::set_allocated_unit(::std::string* unit) {
  if (unit != nullptr) {
    
  } else {
    
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.MetricDescriptor.unit)
}

// .opencensus.proto.metrics.v1.MetricDescriptor.Type type = 4;
inline void MetricDescriptor::clear_type() {
  type_ = 0;
}
inline ::opencensus::proto::metrics::v1::MetricDescriptor_Type MetricDescriptor::type() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.MetricDescriptor.type)
  return static_cast< ::opencensus::proto::metrics::v1::MetricDescriptor_Type >(type_);
}
inline void MetricDescriptor::set_type(::opencensus::proto::metrics::v1::MetricDescriptor_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.MetricDescriptor.type)
}

// repeated .opencensus.proto.metrics.v1.LabelKey label_keys = 5;
inline int MetricDescriptor::label_keys_size() const {
  return label_keys_.size();
}
inline void MetricDescriptor::clear_label_keys() {
  label_keys_.Clear();
}
inline ::opencensus::proto::metrics::v1::LabelKey* MetricDescriptor::mutable_label_keys(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.MetricDescriptor.label_keys)
  return label_keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelKey >*
MetricDescriptor::mutable_label_keys() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.MetricDescriptor.label_keys)
  return &label_keys_;
}
inline const ::opencensus::proto::metrics::v1::LabelKey& MetricDescriptor::label_keys(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.MetricDescriptor.label_keys)
  return label_keys_.Get(index);
}
inline ::opencensus::proto::metrics::v1::LabelKey* MetricDescriptor::add_label_keys() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.MetricDescriptor.label_keys)
  return label_keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelKey >&
MetricDescriptor::label_keys() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.MetricDescriptor.label_keys)
  return label_keys_;
}

// -------------------------------------------------------------------

// LabelKey

// string key = 1;
inline void LabelKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelKey::key() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.LabelKey.key)
  return key_.GetNoArena();
}
inline void LabelKey::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.LabelKey.key)
}
#if LANG_CXX11
inline void LabelKey::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.LabelKey.key)
}
#endif
inline void LabelKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.LabelKey.key)
}
inline void LabelKey::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.LabelKey.key)
}
inline ::std::string* LabelKey::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.LabelKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelKey::release_key() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.LabelKey.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelKey::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.LabelKey.key)
}

// string description = 2;
inline void LabelKey::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelKey::description() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.LabelKey.description)
  return description_.GetNoArena();
}
inline void LabelKey::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.LabelKey.description)
}
#if LANG_CXX11
inline void LabelKey::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.LabelKey.description)
}
#endif
inline void LabelKey::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.LabelKey.description)
}
inline void LabelKey::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.LabelKey.description)
}
inline ::std::string* LabelKey::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.LabelKey.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelKey::release_description() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.LabelKey.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelKey::set_allocated_description(::std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.LabelKey.description)
}

// -------------------------------------------------------------------

// TimeSeries

// .google.protobuf.Timestamp start_timestamp = 1;
inline bool TimeSeries::has_start_timestamp() const {
  return this != internal_default_instance() && start_timestamp_ != nullptr;
}
inline const ::google::protobuf::Timestamp& TimeSeries::start_timestamp() const {
  const ::google::protobuf::Timestamp* p = start_timestamp_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.TimeSeries.start_timestamp)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* TimeSeries::release_start_timestamp() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.TimeSeries.start_timestamp)
  
  ::google::protobuf::Timestamp* temp = start_timestamp_;
  start_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TimeSeries::mutable_start_timestamp() {
  
  if (start_timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    start_timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.TimeSeries.start_timestamp)
  return start_timestamp_;
}
inline void TimeSeries::set_allocated_start_timestamp(::google::protobuf::Timestamp* start_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_timestamp_);
  }
  if (start_timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(start_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      start_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  start_timestamp_ = start_timestamp;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.TimeSeries.start_timestamp)
}

// repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;
inline int TimeSeries::label_values_size() const {
  return label_values_.size();
}
inline void TimeSeries::clear_label_values() {
  label_values_.Clear();
}
inline ::opencensus::proto::metrics::v1::LabelValue* TimeSeries::mutable_label_values(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.TimeSeries.label_values)
  return label_values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelValue >*
TimeSeries::mutable_label_values() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.TimeSeries.label_values)
  return &label_values_;
}
inline const ::opencensus::proto::metrics::v1::LabelValue& TimeSeries::label_values(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.TimeSeries.label_values)
  return label_values_.Get(index);
}
inline ::opencensus::proto::metrics::v1::LabelValue* TimeSeries::add_label_values() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.TimeSeries.label_values)
  return label_values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::LabelValue >&
TimeSeries::label_values() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.TimeSeries.label_values)
  return label_values_;
}

// repeated .opencensus.proto.metrics.v1.Point points = 3;
inline int TimeSeries::points_size() const {
  return points_.size();
}
inline void TimeSeries::clear_points() {
  points_.Clear();
}
inline ::opencensus::proto::metrics::v1::Point* TimeSeries::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.TimeSeries.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::Point >*
TimeSeries::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.TimeSeries.points)
  return &points_;
}
inline const ::opencensus::proto::metrics::v1::Point& TimeSeries::points(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.TimeSeries.points)
  return points_.Get(index);
}
inline ::opencensus::proto::metrics::v1::Point* TimeSeries::add_points() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.TimeSeries.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::Point >&
TimeSeries::points() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.TimeSeries.points)
  return points_;
}

// -------------------------------------------------------------------

// LabelValue

// string value = 1;
inline void LabelValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LabelValue::value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.LabelValue.value)
  return value_.GetNoArena();
}
inline void LabelValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.LabelValue.value)
}
#if LANG_CXX11
inline void LabelValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:opencensus.proto.metrics.v1.LabelValue.value)
}
#endif
inline void LabelValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:opencensus.proto.metrics.v1.LabelValue.value)
}
inline void LabelValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:opencensus.proto.metrics.v1.LabelValue.value)
}
inline ::std::string* LabelValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.LabelValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LabelValue::release_value() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.LabelValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LabelValue::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.LabelValue.value)
}

// bool has_value = 2;
inline void LabelValue::clear_has_value() {
  has_value_ = false;
}
inline bool LabelValue::has_value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.LabelValue.has_value)
  return has_value_;
}
inline void LabelValue::set_has_value(bool value) {
  
  has_value_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.LabelValue.has_value)
}

// -------------------------------------------------------------------

// Point

// .google.protobuf.Timestamp timestamp = 1;
inline bool Point::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Point::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Point.timestamp)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Point::release_timestamp() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.Point.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Point::mutable_timestamp() {
  
  if (timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Point.timestamp)
  return timestamp_;
}
inline void Point::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.Point.timestamp)
}

// int64 int64_value = 2;
inline bool Point::has_int64_value() const {
  return value_case() == kInt64Value;
}
inline void Point::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void Point::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Point::int64_value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Point.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void Point::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.Point.int64_value)
}

// double double_value = 3;
inline bool Point::has_double_value() const {
  return value_case() == kDoubleValue;
}
inline void Point::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void Point::clear_double_value() {
  if (has_double_value()) {
    value_.double_value_ = 0;
    clear_has_value();
  }
}
inline double Point::double_value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Point.double_value)
  if (has_double_value()) {
    return value_.double_value_;
  }
  return 0;
}
inline void Point::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value();
    set_has_double_value();
  }
  value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.Point.double_value)
}

// .opencensus.proto.metrics.v1.DistributionValue distribution_value = 4;
inline bool Point::has_distribution_value() const {
  return value_case() == kDistributionValue;
}
inline void Point::set_has_distribution_value() {
  _oneof_case_[0] = kDistributionValue;
}
inline void Point::clear_distribution_value() {
  if (has_distribution_value()) {
    delete value_.distribution_value_;
    clear_has_value();
  }
}
inline ::opencensus::proto::metrics::v1::DistributionValue* Point::release_distribution_value() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.Point.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
      ::opencensus::proto::metrics::v1::DistributionValue* temp = value_.distribution_value_;
    value_.distribution_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::opencensus::proto::metrics::v1::DistributionValue& Point::distribution_value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Point.distribution_value)
  return has_distribution_value()
      ? *value_.distribution_value_
      : *reinterpret_cast< ::opencensus::proto::metrics::v1::DistributionValue*>(&::opencensus::proto::metrics::v1::_DistributionValue_default_instance_);
}
inline ::opencensus::proto::metrics::v1::DistributionValue* Point::mutable_distribution_value() {
  if (!has_distribution_value()) {
    clear_value();
    set_has_distribution_value();
    value_.distribution_value_ = CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Point.distribution_value)
  return value_.distribution_value_;
}

// .opencensus.proto.metrics.v1.SummaryValue summary_value = 5;
inline bool Point::has_summary_value() const {
  return value_case() == kSummaryValue;
}
inline void Point::set_has_summary_value() {
  _oneof_case_[0] = kSummaryValue;
}
inline void Point::clear_summary_value() {
  if (has_summary_value()) {
    delete value_.summary_value_;
    clear_has_value();
  }
}
inline ::opencensus::proto::metrics::v1::SummaryValue* Point::release_summary_value() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.Point.summary_value)
  if (has_summary_value()) {
    clear_has_value();
      ::opencensus::proto::metrics::v1::SummaryValue* temp = value_.summary_value_;
    value_.summary_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::opencensus::proto::metrics::v1::SummaryValue& Point::summary_value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.Point.summary_value)
  return has_summary_value()
      ? *value_.summary_value_
      : *reinterpret_cast< ::opencensus::proto::metrics::v1::SummaryValue*>(&::opencensus::proto::metrics::v1::_SummaryValue_default_instance_);
}
inline ::opencensus::proto::metrics::v1::SummaryValue* Point::mutable_summary_value() {
  if (!has_summary_value()) {
    clear_value();
    set_has_summary_value();
    value_.summary_value_ = CreateMaybeMessage< ::opencensus::proto::metrics::v1::SummaryValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.Point.summary_value)
  return value_.summary_value_;
}

inline bool Point::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Point::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Point::ValueCase Point::value_case() const {
  return Point::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DistributionValue_BucketOptions_Explicit

// repeated double bounds = 1;
inline int DistributionValue_BucketOptions_Explicit::bounds_size() const {
  return bounds_.size();
}
inline void DistributionValue_BucketOptions_Explicit::clear_bounds() {
  bounds_.Clear();
}
inline double DistributionValue_BucketOptions_Explicit::bounds(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit.bounds)
  return bounds_.Get(index);
}
inline void DistributionValue_BucketOptions_Explicit::set_bounds(int index, double value) {
  bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit.bounds)
}
inline void DistributionValue_BucketOptions_Explicit::add_bounds(double value) {
  bounds_.Add(value);
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit.bounds)
}
inline const ::google::protobuf::RepeatedField< double >&
DistributionValue_BucketOptions_Explicit::bounds() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit.bounds)
  return bounds_;
}
inline ::google::protobuf::RepeatedField< double >*
DistributionValue_BucketOptions_Explicit::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit.bounds)
  return &bounds_;
}

// -------------------------------------------------------------------

// DistributionValue_BucketOptions

// .opencensus.proto.metrics.v1.DistributionValue.BucketOptions.Explicit explicit = 1;
inline bool DistributionValue_BucketOptions::has_explicit_() const {
  return type_case() == kExplicit;
}
inline void DistributionValue_BucketOptions::set_has_explicit_() {
  _oneof_case_[0] = kExplicit;
}
inline void DistributionValue_BucketOptions::clear_explicit_() {
  if (has_explicit_()) {
    delete type_.explicit__;
    clear_has_type();
  }
}
inline ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* DistributionValue_BucketOptions::release_explicit_() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.explicit)
  if (has_explicit_()) {
    clear_has_type();
      ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* temp = type_.explicit__;
    type_.explicit__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit& DistributionValue_BucketOptions::explicit_() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.explicit)
  return has_explicit_()
      ? *type_.explicit__
      : *reinterpret_cast< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit*>(&::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_Explicit_default_instance_);
}
inline ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit* DistributionValue_BucketOptions::mutable_explicit_() {
  if (!has_explicit_()) {
    clear_type();
    set_has_explicit_();
    type_.explicit__ = CreateMaybeMessage< ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions_Explicit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.DistributionValue.BucketOptions.explicit)
  return type_.explicit__;
}

inline bool DistributionValue_BucketOptions::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void DistributionValue_BucketOptions::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline DistributionValue_BucketOptions::TypeCase DistributionValue_BucketOptions::type_case() const {
  return DistributionValue_BucketOptions::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DistributionValue_Bucket

// int64 count = 1;
inline void DistributionValue_Bucket::clear_count() {
  count_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 DistributionValue_Bucket::count() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.Bucket.count)
  return count_;
}
inline void DistributionValue_Bucket::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.Bucket.count)
}

// .opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;
inline bool DistributionValue_Bucket::has_exemplar() const {
  return this != internal_default_instance() && exemplar_ != nullptr;
}
inline void DistributionValue_Bucket::clear_exemplar() {
  if (GetArenaNoVirtual() == nullptr && exemplar_ != nullptr) {
    delete exemplar_;
  }
  exemplar_ = nullptr;
}
inline const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar& DistributionValue_Bucket::exemplar() const {
  const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* p = exemplar_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.Bucket.exemplar)
  return p != nullptr ? *p : *reinterpret_cast<const ::opencensus::proto::metrics::v1::DistributionValue_Exemplar*>(
      &::opencensus::proto::metrics::v1::_DistributionValue_Exemplar_default_instance_);
}
inline ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* DistributionValue_Bucket::release_exemplar() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.DistributionValue.Bucket.exemplar)
  
  ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* temp = exemplar_;
  exemplar_ = nullptr;
  return temp;
}
inline ::opencensus::proto::metrics::v1::DistributionValue_Exemplar* DistributionValue_Bucket::mutable_exemplar() {
  
  if (exemplar_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_Exemplar>(GetArenaNoVirtual());
    exemplar_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.DistributionValue.Bucket.exemplar)
  return exemplar_;
}
inline void DistributionValue_Bucket::set_allocated_exemplar(::opencensus::proto::metrics::v1::DistributionValue_Exemplar* exemplar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete exemplar_;
  }
  if (exemplar) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      exemplar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exemplar, submessage_arena);
    }
    
  } else {
    
  }
  exemplar_ = exemplar;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.DistributionValue.Bucket.exemplar)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DistributionValue_Exemplar

// double value = 1;
inline void DistributionValue_Exemplar::clear_value() {
  value_ = 0;
}
inline double DistributionValue_Exemplar::value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.Exemplar.value)
  return value_;
}
inline void DistributionValue_Exemplar::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.Exemplar.value)
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool DistributionValue_Exemplar::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != nullptr;
}
inline const ::google::protobuf::Timestamp& DistributionValue_Exemplar::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.Exemplar.timestamp)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* DistributionValue_Exemplar::release_timestamp() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.DistributionValue.Exemplar.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DistributionValue_Exemplar::mutable_timestamp() {
  
  if (timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.DistributionValue.Exemplar.timestamp)
  return timestamp_;
}
inline void DistributionValue_Exemplar::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.DistributionValue.Exemplar.timestamp)
}

// map<string, string> attachments = 3;
inline int DistributionValue_Exemplar::attachments_size() const {
  return attachments_.size();
}
inline void DistributionValue_Exemplar::clear_attachments() {
  attachments_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
DistributionValue_Exemplar::attachments() const {
  // @@protoc_insertion_point(field_map:opencensus.proto.metrics.v1.DistributionValue.Exemplar.attachments)
  return attachments_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
DistributionValue_Exemplar::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_map:opencensus.proto.metrics.v1.DistributionValue.Exemplar.attachments)
  return attachments_.MutableMap();
}

// -------------------------------------------------------------------

// DistributionValue

// int64 count = 1;
inline void DistributionValue::clear_count() {
  count_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 DistributionValue::count() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.count)
  return count_;
}
inline void DistributionValue::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.count)
}

// double sum = 2;
inline void DistributionValue::clear_sum() {
  sum_ = 0;
}
inline double DistributionValue::sum() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.sum)
  return sum_;
}
inline void DistributionValue::set_sum(double value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.sum)
}

// double sum_of_squared_deviation = 3;
inline void DistributionValue::clear_sum_of_squared_deviation() {
  sum_of_squared_deviation_ = 0;
}
inline double DistributionValue::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.sum_of_squared_deviation)
  return sum_of_squared_deviation_;
}
inline void DistributionValue::set_sum_of_squared_deviation(double value) {
  
  sum_of_squared_deviation_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.DistributionValue.sum_of_squared_deviation)
}

// .opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;
inline bool DistributionValue::has_bucket_options() const {
  return this != internal_default_instance() && bucket_options_ != nullptr;
}
inline void DistributionValue::clear_bucket_options() {
  if (GetArenaNoVirtual() == nullptr && bucket_options_ != nullptr) {
    delete bucket_options_;
  }
  bucket_options_ = nullptr;
}
inline const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions& DistributionValue::bucket_options() const {
  const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* p = bucket_options_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.bucket_options)
  return p != nullptr ? *p : *reinterpret_cast<const ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions*>(
      &::opencensus::proto::metrics::v1::_DistributionValue_BucketOptions_default_instance_);
}
inline ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* DistributionValue::release_bucket_options() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.DistributionValue.bucket_options)
  
  ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* temp = bucket_options_;
  bucket_options_ = nullptr;
  return temp;
}
inline ::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* DistributionValue::mutable_bucket_options() {
  
  if (bucket_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencensus::proto::metrics::v1::DistributionValue_BucketOptions>(GetArenaNoVirtual());
    bucket_options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.DistributionValue.bucket_options)
  return bucket_options_;
}
inline void DistributionValue::set_allocated_bucket_options(::opencensus::proto::metrics::v1::DistributionValue_BucketOptions* bucket_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bucket_options_;
  }
  if (bucket_options) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bucket_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bucket_options, submessage_arena);
    }
    
  } else {
    
  }
  bucket_options_ = bucket_options;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.DistributionValue.bucket_options)
}

// repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;
inline int DistributionValue::buckets_size() const {
  return buckets_.size();
}
inline void DistributionValue::clear_buckets() {
  buckets_.Clear();
}
inline ::opencensus::proto::metrics::v1::DistributionValue_Bucket* DistributionValue::mutable_buckets(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.DistributionValue.buckets)
  return buckets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >*
DistributionValue::mutable_buckets() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.DistributionValue.buckets)
  return &buckets_;
}
inline const ::opencensus::proto::metrics::v1::DistributionValue_Bucket& DistributionValue::buckets(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.DistributionValue.buckets)
  return buckets_.Get(index);
}
inline ::opencensus::proto::metrics::v1::DistributionValue_Bucket* DistributionValue::add_buckets() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.DistributionValue.buckets)
  return buckets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::DistributionValue_Bucket >&
DistributionValue::buckets() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.DistributionValue.buckets)
  return buckets_;
}

// -------------------------------------------------------------------

// SummaryValue_Snapshot_ValueAtPercentile

// double percentile = 1;
inline void SummaryValue_Snapshot_ValueAtPercentile::clear_percentile() {
  percentile_ = 0;
}
inline double SummaryValue_Snapshot_ValueAtPercentile::percentile() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile.percentile)
  return percentile_;
}
inline void SummaryValue_Snapshot_ValueAtPercentile::set_percentile(double value) {
  
  percentile_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile.percentile)
}

// double value = 2;
inline void SummaryValue_Snapshot_ValueAtPercentile::clear_value() {
  value_ = 0;
}
inline double SummaryValue_Snapshot_ValueAtPercentile::value() const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile.value)
  return value_;
}
inline void SummaryValue_Snapshot_ValueAtPercentile::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile.value)
}

// -------------------------------------------------------------------

// SummaryValue_Snapshot

// .google.protobuf.Int64Value count = 1;
inline bool SummaryValue_Snapshot::has_count() const {
  return this != internal_default_instance() && count_ != nullptr;
}
inline const ::google::protobuf::Int64Value& SummaryValue_Snapshot::count() const {
  const ::google::protobuf::Int64Value* p = count_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.Snapshot.count)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* SummaryValue_Snapshot::release_count() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.SummaryValue.Snapshot.count)
  
  ::google::protobuf::Int64Value* temp = count_;
  count_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* SummaryValue_Snapshot::mutable_count() {
  
  if (count_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    count_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.Snapshot.count)
  return count_;
}
inline void SummaryValue_Snapshot::set_allocated_count(::google::protobuf::Int64Value* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(count_);
  }
  if (count) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(count)->GetArena();
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  count_ = count;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.SummaryValue.Snapshot.count)
}

// .google.protobuf.DoubleValue sum = 2;
inline bool SummaryValue_Snapshot::has_sum() const {
  return this != internal_default_instance() && sum_ != nullptr;
}
inline const ::google::protobuf::DoubleValue& SummaryValue_Snapshot::sum() const {
  const ::google::protobuf::DoubleValue* p = sum_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.Snapshot.sum)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* SummaryValue_Snapshot::release_sum() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.SummaryValue.Snapshot.sum)
  
  ::google::protobuf::DoubleValue* temp = sum_;
  sum_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* SummaryValue_Snapshot::mutable_sum() {
  
  if (sum_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    sum_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.Snapshot.sum)
  return sum_;
}
inline void SummaryValue_Snapshot::set_allocated_sum(::google::protobuf::DoubleValue* sum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sum_);
  }
  if (sum) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(sum)->GetArena();
    if (message_arena != submessage_arena) {
      sum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sum, submessage_arena);
    }
    
  } else {
    
  }
  sum_ = sum;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.SummaryValue.Snapshot.sum)
}

// repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;
inline int SummaryValue_Snapshot::percentile_values_size() const {
  return percentile_values_.size();
}
inline void SummaryValue_Snapshot::clear_percentile_values() {
  percentile_values_.Clear();
}
inline ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* SummaryValue_Snapshot::mutable_percentile_values(int index) {
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.Snapshot.percentile_values)
  return percentile_values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >*
SummaryValue_Snapshot::mutable_percentile_values() {
  // @@protoc_insertion_point(field_mutable_list:opencensus.proto.metrics.v1.SummaryValue.Snapshot.percentile_values)
  return &percentile_values_;
}
inline const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile& SummaryValue_Snapshot::percentile_values(int index) const {
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.Snapshot.percentile_values)
  return percentile_values_.Get(index);
}
inline ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile* SummaryValue_Snapshot::add_percentile_values() {
  // @@protoc_insertion_point(field_add:opencensus.proto.metrics.v1.SummaryValue.Snapshot.percentile_values)
  return percentile_values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opencensus::proto::metrics::v1::SummaryValue_Snapshot_ValueAtPercentile >&
SummaryValue_Snapshot::percentile_values() const {
  // @@protoc_insertion_point(field_list:opencensus.proto.metrics.v1.SummaryValue.Snapshot.percentile_values)
  return percentile_values_;
}

// -------------------------------------------------------------------

// SummaryValue

// .google.protobuf.Int64Value count = 1;
inline bool SummaryValue::has_count() const {
  return this != internal_default_instance() && count_ != nullptr;
}
inline const ::google::protobuf::Int64Value& SummaryValue::count() const {
  const ::google::protobuf::Int64Value* p = count_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.count)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Int64Value*>(
      &::google::protobuf::_Int64Value_default_instance_);
}
inline ::google::protobuf::Int64Value* SummaryValue::release_count() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.SummaryValue.count)
  
  ::google::protobuf::Int64Value* temp = count_;
  count_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* SummaryValue::mutable_count() {
  
  if (count_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Int64Value>(GetArenaNoVirtual());
    count_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.count)
  return count_;
}
inline void SummaryValue::set_allocated_count(::google::protobuf::Int64Value* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(count_);
  }
  if (count) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(count)->GetArena();
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  count_ = count;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.SummaryValue.count)
}

// .google.protobuf.DoubleValue sum = 2;
inline bool SummaryValue::has_sum() const {
  return this != internal_default_instance() && sum_ != nullptr;
}
inline const ::google::protobuf::DoubleValue& SummaryValue::sum() const {
  const ::google::protobuf::DoubleValue* p = sum_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.sum)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* SummaryValue::release_sum() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.SummaryValue.sum)
  
  ::google::protobuf::DoubleValue* temp = sum_;
  sum_ = nullptr;
  return temp;
}
inline ::google::protobuf::DoubleValue* SummaryValue::mutable_sum() {
  
  if (sum_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::DoubleValue>(GetArenaNoVirtual());
    sum_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.sum)
  return sum_;
}
inline void SummaryValue::set_allocated_sum(::google::protobuf::DoubleValue* sum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sum_);
  }
  if (sum) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(sum)->GetArena();
    if (message_arena != submessage_arena) {
      sum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sum, submessage_arena);
    }
    
  } else {
    
  }
  sum_ = sum;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.SummaryValue.sum)
}

// .opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;
inline bool SummaryValue::has_snapshot() const {
  return this != internal_default_instance() && snapshot_ != nullptr;
}
inline void SummaryValue::clear_snapshot() {
  if (GetArenaNoVirtual() == nullptr && snapshot_ != nullptr) {
    delete snapshot_;
  }
  snapshot_ = nullptr;
}
inline const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot& SummaryValue::snapshot() const {
  const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* p = snapshot_;
  // @@protoc_insertion_point(field_get:opencensus.proto.metrics.v1.SummaryValue.snapshot)
  return p != nullptr ? *p : *reinterpret_cast<const ::opencensus::proto::metrics::v1::SummaryValue_Snapshot*>(
      &::opencensus::proto::metrics::v1::_SummaryValue_Snapshot_default_instance_);
}
inline ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* SummaryValue::release_snapshot() {
  // @@protoc_insertion_point(field_release:opencensus.proto.metrics.v1.SummaryValue.snapshot)
  
  ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* temp = snapshot_;
  snapshot_ = nullptr;
  return temp;
}
inline ::opencensus::proto::metrics::v1::SummaryValue_Snapshot* SummaryValue::mutable_snapshot() {
  
  if (snapshot_ == nullptr) {
    auto* p = CreateMaybeMessage<::opencensus::proto::metrics::v1::SummaryValue_Snapshot>(GetArenaNoVirtual());
    snapshot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:opencensus.proto.metrics.v1.SummaryValue.snapshot)
  return snapshot_;
}
inline void SummaryValue::set_allocated_snapshot(::opencensus::proto::metrics::v1::SummaryValue_Snapshot* snapshot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete snapshot_;
  }
  if (snapshot) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      snapshot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, snapshot, submessage_arena);
    }
    
  } else {
    
  }
  snapshot_ = snapshot;
  // @@protoc_insertion_point(field_set_allocated:opencensus.proto.metrics.v1.SummaryValue.snapshot)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace metrics
}  // namespace proto
}  // namespace opencensus

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::opencensus::proto::metrics::v1::MetricDescriptor_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::opencensus::proto::metrics::v1::MetricDescriptor_Type>() {
  return ::opencensus::proto::metrics::v1::MetricDescriptor_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_opencensus_2fproto_2fmetrics_2fv1_2fmetrics_2eproto
